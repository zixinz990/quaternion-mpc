#include "utils/Go1Dynamics.h"

namespace legged{

void Go1Dynamics::go1_FL_inverse_dynamics_task_space(const Eigen::Vector3d &q, const Eigen::Vector3d &v, const Eigen::Vector3d &a,
                                                     Eigen::Vector3d &tau) {
  double a_tmp;
  double t10;
  double t100;
  double t104;
  double t106;
  double t11;
  double t12;
  double t124;
  double t13;
  double t136;
  double t138;
  double t139;
  double t14;
  double t144;
  double t147;
  double t158;
  double t162;
  double t20;
  double t21;
  double t220;
  double t220_tmp;
  double t227;
  double t227_tmp;
  double t236;
  double t239;
  double t26;
  double t265;
  double t266;
  double t279;
  double t280;
  double t29;
  double t290;
  double t290_tmp;
  double t296;
  double t296_tmp;
  double t298;
  double t299;
  double t30;
  double t301;
  double t307;
  double t308;
  double t311;
  double t317_tmp;
  double t322;
  double t322_tmp;
  double t333;
  double t335;
  double t336;
  double t337;
  double t337_tmp;
  double t338;
  double t34;
  double t348;
  double t35;
  double t37;
  double t379;
  double t379_tmp;
  double t386;
  double t387;
  double t390;
  double t391;
  double t396;
  double t40;
  double t407;
  double t42;
  double t420;
  double t421;
  double t422;
  double t423;
  double t424;
  double t433;
  double t433_tmp;
  double t434;
  double t435;
  double t444_tmp;
  double t45;
  double t46;
  double t469;
  double t471_tmp;
  double t476;
  double t48;
  double t49;
  double t5;
  double t500;
  double t51;
  double t510;
  double t519;
  double t56;
  double t59;
  double t6;
  double t63;
  double t64;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t78;
  double t8;
  double t82;
  double t83;
  double t84;
  double t85;
  double t86;
  double t9;
  double t93;
  // go1_FL_inverse_dynamics_task_space
  //     TAU = go1_FL_inverse_dynamics_task_space(IN1,IN2,IN3)
  //     This function was generated by the Symbolic Math Toolbox version 9.2.
  //     01-Jul-2023 18:27:08
  t5 = std::cos(q[0]);
  t6 = std::cos(q[1]);
  t7 = std::cos(q[2]);
  t8 = std::sin(q[0]);
  t9 = std::sin(q[1]);
  t10 = std::sin(q[2]);
  t11 = q[0] + q[1];
  t12 = q[0] + q[2];
  t13 = q[1] + q[2];
  t14 = q[1] * 2.0;
  t20 = t6 * t6;
  t21 = t7 * t7;
  t26 = std::cos(t13);
  t29 = std::sin(t13);
  t30 = q[2] + t11;
  t37 = 1.0 / t10;
  t40 = q[1] + t13;
  t46 = t11 + t13;
  t48 = q[0] - q[1];
  t49 = q[0] - q[2];
  t51 = t13 * 2.0;
  t59 = t13 - q[0];
  t510 = t5 * v[1];
  t82 = t510 * 81200.0;
  t83 = t5 * v[2] * 213000.0;
  t336 = t8 * v[2];
  t84 = t336 * 81200.0;
  t85 = t9 * v[0] * 213000.0;
  t86 = t8 * v[1] * 213000.0;
  t104 = t6 * t8 * v[1] * -213000.0;
  t124 = t5 * t9 * t10 * v[2] * -213000.0;
  t34 = std::cos(t30);
  t35 = std::sin(t30);
  t42 = std::cos(q[2] + t13);
  t45 = std::sin(t40);
  t56 = std::cos(q[1] - q[2]);
  t63 = 1.0 / (t7 + 1.0);
  t69 = std::sin(t51);
  t70 = t13 + t30;
  t71 = std::cos(t59);
  t72 = std::sin(t59);
  t78 = -q[0] + t40;
  t93 = -q[0] + t51;
  t30 = t6 * t83;
  t100 = t7 * t85;
  a_tmp = t9 - t29;
  t106 = 1.0 / (a_tmp * a_tmp);
  t136 = t510 * 1000.0 + t336 * 1000.0;
  t280 = (t10 * 0.179549 + t7 * 0.003341999999999993) + 0.0061970000000000081;
  t64 = t63 * t63;
  t144 = t136 * t136;
  t279 = (t7 * 0.179549 - t10 * 0.003341999999999993) + 0.116695;
  t138 = 1.0 / (t6 * 213.0 + t26 * 213.0);
  t147 = 1.0 / (t6 * 1065.0 + t26 * 1065.0);
  t290_tmp = t9 * t10;
  t519 = t6 * t10;
  t290 = (((((((((t85 - t82) - t84) + t30) + t519 * v[0] * 213000.0) + t100) +
             t104) +
            t7 * t30) +
           t290_tmp * t86) +
          t7 * t104) +
         t124;
  t30 = t5 * t20;
  t336 = t6 * t7;
  t59 = t336 * t8;
  t510 = t5 * t6 * t7;
  t335 = ((((((((((((((((((((((t83 - t86) - std::sin(t14) * v[0] * 106500.0) -
                             std::sin(q[2] * 2.0) * v[0] * 106500.0) +
                            t6 * t100) +
                           t290_tmp * t82) +
                          t290_tmp * t84) +
                         t10 * t20 * v[0] * 213000.0) +
                        t20 * t86) +
                       t21 * t86) +
                      t510 * v[1] * -81200.0) +
                     t59 * v[2] * -81200.0) +
                    t30 * v[2] * -213000.0) +
                   t5 * t21 * v[2] * -213000.0) +
                  t290_tmp * (t6 * t86)) +
                 t7 * (t20 * t83)) +
                t6 * t9 * t21 * v[0] * 426000.0) +
               t7 * t10 * t20 * v[0] * 426000.0) +
              t6 * t124) +
             t7 * t8 * t20 * v[1] * -213000.0) +
            t30 * t21 * v[2] * 426000.0) +
           t59 * t9 * t10 * v[1] * 426000.0) -
          t510 * t9 * t10 * v[2] * 426000.0) -
         t8 * t20 * t21 * v[1] * 426000.0;
  t139 = t138 * t138;
  t158 = t336 * t136 * t138;
  t20 = t519 * t136 * t138;
  t21 = t7 * t9 * t136 * t138;
  t162 = t290_tmp * t136 * t138;
  t220_tmp = t6 * t136 * t138;
  t220 = t220_tmp * 0.0033419999999999839;
  t227_tmp = t9 * t136 * t138;
  t227 = t227_tmp * 0.033451;
  t296_tmp = t37 * t290;
  t296 = t296_tmp * 3.4945482796623249E-7;
  t298 = t296_tmp * 1.8557535189226148E-8;
  t299 = t296_tmp * 5.6355440939848791E-12;
  t301 = t296_tmp * 4.5785977209107538E-11;
  t307 = t7 * t279 + t10 * t280;
  t308 = t10 * t279 - t7 * t280;
  t311 = t9 * ((-(t6 * 0.0056569999999999841) + t9 * 0.0001019999999999979) +
               0.0033419999999999839) +
         t6 * ((t9 * 0.0056569999999999841 + t6 * 0.0001019999999999979) -
               0.033451);
  t336 = t335 * t335;
  t337_tmp = t63 * t335;
  t337 = t337_tmp * -2.2041482069254338E-5 / a_tmp;
  t338 = t337_tmp / (t9 * 45369.0 - t29 * 45369.0);
  t348 = t337_tmp * 7.3662633075447641E-8 / a_tmp;
  t82 = t37 * t63 * t290 * t335 * 9.71653863618521E-10 / a_tmp;
  t236 = t158 * 0.019462;
  t239 = t162 * 0.019462;
  t265 = t20 + t21;
  t266 = t158 + t10 * -t9 * t136 * t138;
  t83 = t37 * t37 * (t290 * t290) * 4.8582693180926035E-10;
  t85 = t220_tmp * t307;
  t322_tmp = t136 * t138;
  t322 = t322_tmp * t311;
  t84 = t64 * t106 * t336 * 9.71653863618521E-10;
  t386 = t220_tmp * 0.063146 + t348;
  t387 = t227_tmp * 0.063146 + t337_tmp * 7.3730961669862691E-7 / a_tmp;
  t390 = t280 * t337;
  t30 = t279 * t338;
  t407 = t296_tmp / 45369.0 + t338;
  t317_tmp = t37 * t265 * t290;
  t391 = t7 * t386;
  t104 = t10 * t386;
  t100 = t7 * t387;
  t396 = t10 * t387;
  t86 = a[1] * t5;
  t124 = a[2] * t8;
  t290_tmp = t139 * t144;
  t510 = t29 * t37 * t136 * t138 * t290;
  t433_tmp = t9 * t63 * t136 * t138 * t335;
  t519 = t29 * t63 * t136 * t138 * t335;
  t433 = ((((t86 * 5000.0 + t124 * 5000.0) + t290_tmp * 406.0) +
           t510 * 0.046948356807511735) +
          t433_tmp * 0.046948356807511735 / a_tmp) +
         t519 * 0.046948356807511735 / a_tmp;
  t333 = t322_tmp * 0.000102 - t322;
  t421 =
      ((((t158 * 0.001088793059 - t162 * 0.001088793059) + t20 * 7.117814E-6) +
        t21 * 7.117814E-6) -
       t299) +
      t337_tmp * -5.6355440939848791E-12 / a_tmp;
  t422 = ((((t162 * 2.55679E-7 - t158 * 2.55679E-7) + t20 * 2.077264E-6) +
           t21 * 2.077264E-6) +
          t296_tmp * 2.4255080517534E-8) +
         t337_tmp * 2.4255080517534E-8 / a_tmp;
  t423 = ((((t20 * 2.4787446E-5 + t21 * 2.4787446E-5) + t158 * 7.117814E-6) -
           t162 * 7.117814E-6) +
          t301) +
         t337_tmp * 4.5785977209107538E-11 / a_tmp;
  t434 = t6 * t147 * t433;
  t435 = t9 * t147 * t433;
  t444_tmp = t147 * t311 * t433;
  t59 = t20 * 0.019462 + t21 * 0.019462;
  t469 = (((t59 + t296_tmp * 2.5721307500716351E-6) + t104) + t30) + t100;
  t476 =
      (((t59 + t337_tmp * -2.5721307500716351E-6 / a_tmp) + t104) + t30) + t100;
  t500 =
      ((((((((((((((((((((((((((((((((((((((a[1] * t8 * 2.347417840375587 -
                                            a[2] * t5 * 2.347417840375587) -
                                           a[0] * t10 * 2.347417840375587) +
                                          a[1] * t34 * 0.8948841720117261) +
                                         a[2] * t35 * 0.8948841720117261) +
                                        a[1] * std::sin(t12) *
                                            1.173708920187793) -
                                       a[2] * std::cos(t12) *
                                           1.173708920187793) +
                                      a[1] * t71 * 0.8948841720117261) +
                                     a[1] * std::sin(t46) *
                                         1.173708920187793) -
                                    a[2] * t72 * 0.8948841720117261) -
                                   a[0] * t45 * 2.347417840375587) +
                                  a[1] * std::sin(t49) * 1.173708920187793) -
                                 a[2] * std::cos(t49) * 1.173708920187793) -
                                a[2] * std::cos(t46) * 1.173708920187793) +
                               a[1] * std::sin(t70) * 1.173708920187793) -
                              a[0] * t69 * 2.347417840375587) -
                             a[2] * std::cos(t70) * 1.173708920187793) -
                            a[2] * std::cos(t78) * 1.173708920187793) -
                           a[1] * std::sin(t78) * 1.173708920187793) -
                          a[2] * std::cos(t93) * 1.173708920187793) -
                         a[1] * std::sin(t93) * 1.173708920187793) +
                        t6 * t139 * t144) +
                       t26 * t139 * t144 * 1.395329189534704) +
                      t42 * t139 * t144 * 0.5) +
                     std::cos(t13 + t14) * t139 * t144 * 0.25) +
                    t56 * t139 * t144 * 0.25) +
                   std::cos(t13 + t40) * t139 * t144 * 0.5) +
                  std::cos(t13 * 3.0) * t139 * t144 * 0.25) +
                 t6 * t83) +
                t26 * t83) +
               t37 * t69 * t136 * t138 * t290 * 8.4026682818002442E-6) +
              t6 * t64 * t106 * t336 * 7.2874039771389057E-10) +
             t26 * t64 * t106 * t336 * 7.2874039771389057E-10) +
            t42 * t64 * t106 * t336 * 2.4291346590463017E-10) +
           t56 * t64 * t106 * t336 * 2.4291346590463017E-10) +
          t10 * t63 * t136 * t138 * t335 * -8.4026682818002442E-6 / a_tmp) +
         t45 * t63 * t136 * t138 * t335 * 8.4026682818002442E-6 / a_tmp) +
        t63 * t69 * t136 * t138 * t335 * 8.4026682818002442E-6 / a_tmp) +
       t6 * t82) +
      t26 * t82;
  t379_tmp =
      t296_tmp *
      (((t20 * 0.116695 + t21 * 0.116695) + t162 * 0.0061970000000000081) -
       t158 * 0.0061970000000000081);
  t379 = t379_tmp * 2.9945998368930331E-6;
  t420 = (t85 + -t9 * t136 * t138 * t308) + t333;
  t424 = ((t322_tmp * 1.3857924E-5 + t85 * 0.135862) -
          t227_tmp * t308 * 0.135862) -
         t322 * 0.135862;
  t59 = t227_tmp * t337 + t434;
  t85 = t220_tmp * t338 + t435;
  t336 = ((((t239 - t236) + t296_tmp * 1.3659106438316931E-7) + t280 * t338) +
          t396) -
         t391;
  t471_tmp = t63 * t279;
  t100 = ((((t20 * 0.002644146244 + t21 * 0.002644146244) + t296) +
           t471_tmp * t335 * 2.9945998368930331E-6 / a_tmp) +
          t104 * 0.135862) +
         t100 * 0.135862;
  t35 =
      t37 * (((((((((((((((((((((((((t86 * 1.789768344023452 +
                                     t124 * 1.789768344023452) -
                                    a[0] * t9 * 4.694835680751174) -
                                   a[0] * t29 * 4.694835680751174) +
                                  a[1] * std::sin(t11) * 2.347417840375587) -
                                 a[2] * std::cos(t11) * 2.347417840375587) +
                                a[1] * t35 * 2.347417840375587) -
                               a[2] * t34 * 2.347417840375587) +
                              a[1] * std::sin(t48) * 2.347417840375587) -
                             a[2] * std::cos(t48) * 2.347417840375587) -
                            a[1] * t72 * 2.347417840375587) -
                           a[2] * t71 * 2.347417840375587) +
                          t290_tmp * 1.145329189534704) +
                         t7 * t139 * t144) +
                        std::cos(t14) * t139 * t144 * 0.5) +
                       std::cos(t40) * t139 * t144) +
                      std::cos(t51) * t139 * t144 * 0.5) +
                     t83) +
                    t7 * t83) +
                   t510 * 1.6805336563600488E-5) +
                  t84) +
                 t7 * t84) +
                t433_tmp * 1.6805336563600488E-5 / a_tmp) +
               t519 * 1.6805336563600488E-5 / a_tmp) +
              t82) +
             t7 * t82);
  t34 = t147 * t433;
  t30 = t5 * 9.81 - t34 * 0.008752;
  t104 = t37 * t266 * t290;
  t69 = t322_tmp * 9.384E-5 - t322 * 0.92;
  t144 = t220_tmp * 0.058094319999999991 +
         t337_tmp * 6.7769622429411819E-8 / a_tmp;
  t290 = t227_tmp * 0.058094319999999991 +
         t337_tmp * 6.7832484736273673E-7 / a_tmp;
  t147 = (t227_tmp * 0.000572001265 + t220_tmp * 5.7496807E-5) +
         t337_tmp * 9.887085291719015E-8 / a_tmp;
  t72 = t265 * t424;
  t71 = t266 * t424;
  t11 = t6 * t30;
  t14 = t10 * t59;
  t40 = t7 * t59;
  t48 = t7 * t85;
  t51 = t10 * t85;
  t45 = t307 * t59;
  t56 = t45 * 0.135862;
  t49 = t308 * t85;
  t42 = t49 * 0.135862;
  t85 = t63 * t280;
  t59 = ((((t162 * 0.002644146244 - t158 * 0.002644146244) + t298) +
          t85 * t335 * 2.9945998368930331E-6 / a_tmp) +
         t396 * 0.135862) -
        t391 * 0.135862;
  t13 = t265 * t100;
  t26 = t407 * t100;
  t46 = t336 * t100;
  t64 = t30 * t9;
  t78 = t266 * t59;
  t93 = t407 * t59;
  t106 = -(t469 * t59);
  t70 = t63 * t500;
  t30 = ((t433_tmp * -1.3918314267451341E-6 / a_tmp + t11) +
         t434 * 0.07189799999999999) +
        t70 * -0.0033419999999999839 / a_tmp;
  t12 = t6 * t63 * t136 * t138 * t335;
  t510 = ((t12 * 1.3918314267451341E-6 / a_tmp + t64) +
          t435 * 0.07189799999999999) +
         t70 * -0.033451 / a_tmp;
  t139 = ((((((((((-(t317_tmp * 2.3998612687077079E-8) +
                   t104 * 1.568871696532875E-10) -
                  t265 * t422) +
                 t407 * t423) +
                t40 * 0.001088793059) +
               t14 * 7.117814E-6) -
              t51 * 0.001088793059) +
             t48 * 7.117814E-6) +
            t424 * t336) -
           t420 * t59) +
          t35 * 2.55679E-7) +
         t70 * 2.55679E-7 / a_tmp;
  t322_tmp = t7 * t510;
  t322 = t10 * t30;
  t290_tmp = t471_tmp * t500;
  t433 = (((((((t72 + t14 * 0.002644146244) + t48 * 0.002644146244) +
              t296_tmp *
                  (((((t236 - t239) + t390) + t391) - t396) +
                   t337_tmp * 1.3659106438316931E-7 / a_tmp) *
                  2.9945998368930331E-6) +
             t93) -
            t35 * 0.01585441609) +
           t290_tmp * -0.135862 / a_tmp) +
          t322 * 0.135862) +
         t322_tmp * 0.135862;
  t124 = t7 * t30;
  t86 = t10 * t510;
  t84 = t85 * t500;
  t519 = (((((((t71 + t40 * 0.002644146244) - t51 * 0.002644146244) -
              t296_tmp * t476 * 2.9945998368930331E-6) +
             t26) +
            t35 * 0.00084193681400000124) +
           t84 * 0.135862 / a_tmp) +
          t124 * 0.135862) -
         t86 * 0.135862;
  t20 = (t220 + t227) * t63 * t335;
  t21 = t7 * t433;
  t82 = t10 * t519;
  t83 = (((((((-(t8 * 1.33280622) + t379) - t34 * 1.3857924E-5) +
             t444_tmp * 0.135862) -
            t56) +
           t42) +
          t13) -
         t78) +
        t20 * 2.9945998368930331E-6 / a_tmp;
  t30 = ((((((((((t317_tmp * 1.568871696532875E-10 -
                  t104 * 5.4635204655161008E-10) -
                 t266 * t422) +
                t407 * t421) -
               t14 * 2.4787446E-5) -
              t40 * 7.117814E-6) -
             t48 * 2.4787446E-5) +
            t51 * 7.117814E-6) +
           t424 * t469) -
          t420 * t100) +
         t35 * 2.077264E-6) +
        t70 * 2.077264E-6 / a_tmp;
  t59 = t7 * t519;
  t510 = t10 * t433;
  t336 = t220_tmp * t144;
  t85 = t227_tmp * t290;
  t104 = (t227_tmp * 0.000740309489 - t220_tmp * 0.000218457134) +
         t337_tmp * 1.26077556260883E-8 / a_tmp;
  t100 = (t220_tmp * 0.004431760472 - t227_tmp * 0.000218457134) +
         t337_tmp * 1.2673148405298769E-9 / a_tmp;
  tau[0] =
      (((((((((t5 * -0.05074155792 + t8 * 0.00164788305444) - t13 * 0.000102) +
             t78 * 0.000102) +
            t9 *
                (((((((t435 * 0.06614616 + t64 * 0.92) + t21) - t82) +
                    t337 * t144) -
                   t70 * 0.03077492 / a_tmp) +
                  t227_tmp * t69) +
                 t12 * 1.2804849126055231E-6 / a_tmp) *
                0.063146) +
           ((t34 * 0.000379294663816248 + t45 * 1.3857924E-5) -
            t49 * 1.3857924E-5)) +
          (t311 *
               ((((((((((t8 * -10.35800622 + t379) - t56) + t42) + t13) - t78) -
                    t34 * 0.000107697924) +
                   t444_tmp * 1.055862) +
                  t336) +
                 t85) +
                t20 * 2.3272763340607019E-5 / a_tmp) -
           t9 * ((((((t434 * 0.000218457134 - t435 * 0.000740309489) -
                     t308 * t83) -
                    t21 * 0.019462) +
                   t10 * t139) +
                  ((((t82 * 0.019462 - t333 * t290) + t69 * t387) + t7 * t30) +
                   t338 * t100)) +
                 (((t70 * 0.000572001265 / a_tmp - t220_tmp * t147) -
                   t12 * 1.6317518327492342E-8 / a_tmp) -
                  t433_tmp * 4.8151190019616922E-9 / a_tmp)))) +
         -t6 * (((((t434 * -0.004431760472 + t435 * 0.000218457134) +
                   t307 * t83) +
                  (((((t337 * t104 - t7 * t139) - t59 * 0.019462) -
                     t510 * 0.019462) -
                    t333 * t144) +
                   t69 * t386)) +
                 (((t10 * t30 + t70 * 5.7496807E-5 / a_tmp) + t227_tmp * t147) +
                  t12 * 4.8151190019616922E-9 / a_tmp)) +
                t433_tmp * 9.7682568978818128E-8 / a_tmp)) +
        t6 *
            (((((((t434 * 0.06614616 + t11 * 0.92) + t59) + t510) +
                t338 * t290) -
               t70 * 0.0030746399999999848 / a_tmp) +
              t220_tmp * t69) -
             t433_tmp * 1.2804849126055231E-6 / a_tmp) *
            0.063146) +
       (((t379_tmp * -3.0544918336308929E-10 - t444_tmp * 0.000107697924) -
         t336 * 0.000102) -
        t85 * 0.000102)) +
      t20 * -2.3738218607419161E-9 / a_tmp;
  t20 = ((t265 * t299 + t266 * t301) + t265 * t421) - t266 * t423;
  tau[1] = ((((((((((t20 + t434 * 0.00027855727371999889) +
                    t435 * 0.00278465646316) +
                   t11 * 0.0030746399999999848) +
                  t64 * 0.03077492) +
                 t46) +
                t106) -
               t40 * 2.55679E-7) +
              ((((t48 * 2.077264E-6 + t14 * 2.077264E-6) + t51 * 2.55679E-7) +
                t59 * 0.0033419999999999839) +
               t21 * 0.033451)) +
             (((((((((((t82 * -0.033451 + t510 * 0.0033419999999999839) -
                       t35 * 0.001100428748) +
                      t220 * t69) +
                     t227 * t69) +
                    t337_tmp * -7.3730961669862691E-7 / a_tmp * t144) +
                   t348 * t290) +
                  t144 * t387) -
                 t386 * t290) +
                t279 * t433) -
               t280 * t519) -
              t70 * 0.0066258277698 / a_tmp)) +
            ((-t6 * t136 * t138 * t104 + t227_tmp * t100) +
             t12 * 5.5441256437655659E-8 / a_tmp)) +
           t433_tmp * -5.5466954184575151E-9 / a_tmp;
  tau[2] = (((((((((t20 + t72 * 0.116695) - t71 * 0.0061970000000000081) -
                  t26 * 0.0061970000000000081) +
                 t93 * 0.116695) +
                t46) +
               t106) -
              t40 * 1.6641453274068021E-5) +
             ((((t48 * 0.00031063590994357987 + t14 * 0.00031063590994357987) +
                t51 * 1.6641453274068021E-5) -
               t124 * 0.00084193681400000124) +
              t322_tmp * 0.01585441609)) +
            ((((t322 * 0.01585441609 + t86 * 0.00084193681400000124) -
               t35 * 0.0029557773160589071) +
              t298 * t476) +
             t296 * (((((t236 - t239) + t390) + t391) - t396) +
                     t335 * t63 * 1.3659106438316931E-7 / (t9 - t29)))) +
           ((t70 * -0.001100428748 / a_tmp - t290_tmp * 0.01585441609 / a_tmp) -
            t84 * 0.00084193681400000124 / a_tmp);
}

void Go1Dynamics::go1_FR_inverse_dynamics_task_space(const Eigen::Vector3d &q, const Eigen::Vector3d &v, const Eigen::Vector3d &a,
                                                     Eigen::Vector3d &tau) {
  double a_tmp;
  double b_t438_tmp;
  double c_t438_tmp;
  double ct_idx_101;
  double ct_idx_105;
  double ct_idx_34_tmp;
  double ct_idx_43;
  double ct_idx_53;
  double ct_idx_53_tmp;
  double ct_idx_54;
  double ct_idx_57;
  double ct_idx_66;
  double ct_idx_67;
  double ct_idx_67_tmp;
  double ct_idx_68;
  double ct_idx_74;
  double ct_idx_75;
  double ct_idx_83_tmp;
  double ct_idx_95;
  double ct_idx_96;
  double ct_idx_99;
  double ct_idx_99_tmp;
  double t10;
  double t100;
  double t104;
  double t106;
  double t11;
  double t12;
  double t123;
  double t13;
  double t136;
  double t138;
  double t139;
  double t14;
  double t144;
  double t147;
  double t163;
  double t20;
  double t21;
  double t224;
  double t224_tmp;
  double t231;
  double t231_tmp;
  double t238;
  double t240;
  double t244;
  double t247;
  double t250;
  double t26;
  double t269;
  double t270;
  double t283;
  double t284;
  double t29;
  double t294;
  double t30;
  double t302;
  double t302_tmp;
  double t305;
  double t307;
  double t309;
  double t310;
  double t311;
  double t316;
  double t317;
  double t322;
  double t323;
  double t329_tmp;
  double t34;
  double t344;
  double t346;
  double t348;
  double t348_tmp;
  double t349;
  double t35;
  double t356;
  double t368;
  double t37;
  double t390;
  double t391;
  double t393;
  double t394;
  double t395;
  double t397;
  double t398;
  double t40;
  double t402;
  double t405;
  double t407;
  double t42;
  double t421;
  double t422;
  double t423;
  double t432;
  double t438;
  double t438_tmp;
  double t45;
  double t46;
  double t469;
  double t469_tmp;
  double t48;
  double t49;
  double t5;
  double t500;
  double t51;
  double t56;
  double t59;
  double t6;
  double t63;
  double t64;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t73;
  double t73_tmp;
  double t74;
  double t74_tmp;
  double t78;
  double t8;
  double t84;
  double t84_tmp;
  double t85;
  double t86;
  double t87;
  double t88;
  double t9;
  double t93;
  // go1_FR_inverse_dynamics_task_space
  //     TAU = go1_FR_inverse_dynamics_task_space(IN1,IN2,IN3)
  //     This function was generated by the Symbolic Math Toolbox version 9.2.
  //     01-Jul-2023 18:27:40
  t5 = std::cos(q[0]);
  t6 = std::cos(q[1]);
  t7 = std::cos(q[2]);
  t8 = std::sin(q[0]);
  t9 = std::sin(q[1]);
  t10 = std::sin(q[2]);
  t11 = q[0] + q[1];
  t12 = q[0] + q[2];
  t13 = q[1] + q[2];
  t14 = q[1] * 2.0;
  t20 = t6 * t6;
  t21 = t7 * t7;
  t26 = std::cos(t13);
  t29 = std::sin(t13);
  t30 = q[2] + t11;
  t37 = 1.0 / t10;
  t40 = q[1] + t13;
  t46 = t11 + t13;
  t48 = q[0] - q[1];
  t49 = q[0] - q[2];
  t51 = t13 * 2.0;
  t59 = t13 - q[0];
  t73_tmp = a[1] * t5;
  t73 = t73_tmp * 5000.0;
  t74_tmp = a[2] * t8;
  t74 = t74_tmp * 5000.0;
  t84_tmp = t5 * v[1];
  t84 = t84_tmp * 81200.0;
  t85 = t5 * v[2] * 213000.0;
  t323 = t8 * v[2];
  t86 = t323 * 81200.0;
  t87 = t9 * v[0] * 213000.0;
  t88 = t8 * v[1] * 213000.0;
  t104 = t6 * t8 * v[1] * -213000.0;
  t310 = t5 * t9 * t10;
  t123 = t310 * v[2] * -213000.0;
  t34 = std::cos(t30);
  t35 = std::sin(t30);
  t42 = std::cos(q[2] + t13);
  t45 = std::sin(t40);
  t56 = std::cos(q[1] - q[2]);
  t63 = 1.0 / (t7 + 1.0);
  t69 = std::sin(t51);
  t70 = t13 + t30;
  t71 = std::cos(t59);
  t72 = std::sin(t59);
  t78 = -q[0] + t40;
  t93 = -q[0] + t51;
  t30 = t6 * t85;
  t100 = t7 * t87;
  a_tmp = t9 - t29;
  t106 = 1.0 / (a_tmp * a_tmp);
  t136 = t84_tmp * 1000.0 + t323 * 1000.0;
  t284 = (t10 * 0.179549 + t7 * 0.003341999999999993) + 0.0061970000000000081;
  t64 = t63 * t63;
  t144 = t136 * t136;
  t283 = (t7 * 0.179549 - t10 * 0.003341999999999993) + 0.116695;
  t138 = 1.0 / (t6 * 213.0 + t26 * 213.0);
  t147 = 1.0 / (t6 * 1065.0 + t26 * 1065.0);
  t323 = t9 * t10;
  t84_tmp = t6 * t10;
  t294 =
      (((((((((t84 + t86) + t87) + t30) + t84_tmp * v[0] * 213000.0) + t100) +
          t104) +
         t7 * t30) +
        t323 * t88) +
       t7 * t104) +
      t123;
  t59 = t6 * t7;
  t30 = t5 * t20;
  t346 = ((((((((((((((((((((((t85 - t88) - std::sin(t14) * v[0] * 106500.0) -
                             std::sin(q[2] * 2.0) * v[0] * 106500.0) +
                            t59 * t84) +
                           t59 * t86) +
                          t6 * t100) +
                         t10 * t20 * v[0] * 213000.0) +
                        t20 * t88) +
                       t21 * t88) +
                      t310 * v[1] * -81200.0) +
                     t8 * t9 * t10 * v[2] * -81200.0) +
                    t30 * v[2] * -213000.0) +
                   t5 * t21 * v[2] * -213000.0) +
                  t323 * (t6 * t88)) +
                 t7 * (t20 * t85)) +
                t6 * t9 * t21 * v[0] * 426000.0) +
               t7 * t10 * t20 * v[0] * 426000.0) +
              t6 * t123) +
             t7 * t8 * t20 * v[1] * -213000.0) +
            t30 * t21 * v[2] * 426000.0) +
           t59 * t8 * t9 * t10 * v[1] * 426000.0) -
          t5 * t6 * t7 * t9 * t10 * v[2] * 426000.0) -
         t8 * t20 * t21 * v[1] * 426000.0;
  t139 = t138 * t138;
  t87 = t59 * t136 * t138;
  t20 = t84_tmp * t136 * t138;
  t21 = t7 * t9 * t136 * t138;
  t59 = t323 * t136 * t138;
  t224_tmp = t6 * t136 * t138;
  t224 = t224_tmp * 0.0033419999999999839;
  t231_tmp = t9 * t136 * t138;
  t231 = t231_tmp * 0.033451;
  t84_tmp = t136 * t138;
  t238 = t84_tmp * 0.000102;
  t302_tmp = t37 * t294;
  t302 = t302_tmp * 3.4945482796623249E-7;
  t305 = t302_tmp * 1.8557535189226148E-8;
  t307 = t302_tmp * 5.6355440939848791E-12;
  t309 = t302_tmp * 4.5785977209107538E-11;
  t85 = t29 * t37 * t136 * t138 * t294;
  t311 = t85 * 0.046948356807511735;
  t316 = t7 * t283 + t10 * t284;
  t317 = t10 * t283 - t7 * t284;
  t322 = t9 * ((-(t6 * 0.0056569999999999841) + t9 * 0.0001019999999999979) +
               0.0033419999999999839) +
         t6 * ((t9 * 0.0056569999999999841 + t6 * 0.0001019999999999979) -
               0.033451);
  t30 = t346 * t346;
  t348_tmp = t63 * t346;
  t348 = t348_tmp * -2.2041482069254338E-5 / a_tmp;
  t349 = t348_tmp / (t9 * 45369.0 - t29 * 45369.0);
  t356 = t348_tmp * -7.3662633075447641E-8 / a_tmp;
  t86 = t37 * t63 * t294 * t346 * 9.71653863618521E-10 / a_tmp;
  t88 = t139 * t144;
  t163 = t88 * 406.0;
  t240 = t59 * 0.016646;
  t244 = t87 * 0.016646;
  t247 = t87 * 0.002261558852;
  t250 = t59 * 0.002261558852;
  t269 = t20 + t21;
  t270 = t87 + t10 * -t9 * t136 * t138;
  t310 = t37 * t37 * (t294 * t294) * 4.8582693180926035E-10;
  t323 = t224_tmp * t316;
  t104 = t84_tmp * t322;
  t368 = t231_tmp * t348;
  t123 = t64 * t106 * t30 * 9.71653863618521E-10;
  t390 = t224_tmp * 0.063146 + t356;
  t391 = t231_tmp * 0.063146 + t348_tmp * -7.3730961669862691E-7 / a_tmp;
  t395 = t283 * t348;
  t407 = t302_tmp / 45369.0 + t349;
  t329_tmp = t37 * t270 * t294;
  t393 = t7 * t390;
  t394 = t10 * t390;
  t397 = t7 * t391;
  t398 = t10 * t391;
  t344 = t238 - t104;
  t402 = t393 * 0.135862;
  t405 = t398 * 0.135862;
  t421 = ((((t87 * 0.001088793059 - t59 * 0.001088793059) + t20 * 7.117814E-6) +
           t21 * 7.117814E-6) -
          t307) +
         t348_tmp * -5.6355440939848791E-12 / a_tmp;
  t422 = ((((t59 * 2.55679E-7 - t87 * 2.55679E-7) + t20 * 2.077264E-6) +
           t21 * 2.077264E-6) +
          t302_tmp * 2.4255080517534E-8) +
         t348_tmp * 2.4255080517534E-8 / a_tmp;
  t423 = ((((t20 * 2.4787446E-5 + t21 * 2.4787446E-5) + t87 * 7.117814E-6) -
           t59 * 7.117814E-6) +
          t309) +
         t348_tmp * 4.5785977209107538E-11 / a_tmp;
  t438_tmp = t9 * t63 * t136 * t138 * t346;
  t432 = t29 * t63 * t136 * t138 * t346;
  b_t438_tmp = ((((t73 + t74) - t163) + t311) +
                t438_tmp * 0.046948356807511735 / a_tmp) +
               t432 * 0.046948356807511735 / a_tmp;
  c_t438_tmp = t147 * b_t438_tmp;
  t438 = t5 * 9.81 + c_t438_tmp * 0.008752;
  t469_tmp = t20 * 0.016646 + t21 * 0.016646;
  t469 = (((t469_tmp - t302_tmp * 2.5721307500716351E-6) + t394) + t395) + t397;
  t500 =
      ((((((((((((((((((((((((((((((((((((((a[1] * t8 * 2.347417840375587 -
                                            a[2] * t5 * 2.347417840375587) -
                                           a[0] * t10 * 2.347417840375587) +
                                          a[1] * std::sin(t12) *
                                              1.173708920187793) -
                                         a[1] * t34 * 0.8948841720117261) -
                                        a[2] * t35 * 0.8948841720117261) -
                                       a[2] * std::cos(t12) *
                                           1.173708920187793) +
                                      a[2] * t72 * 0.8948841720117261) +
                                     a[1] * std::sin(t46) *
                                         1.173708920187793) -
                                    a[1] * t71 * 0.8948841720117261) -
                                   a[0] * t45 * 2.347417840375587) +
                                  a[1] * std::sin(t49) * 1.173708920187793) -
                                 a[2] * std::cos(t49) * 1.173708920187793) -
                                a[2] * std::cos(t46) * 1.173708920187793) +
                               a[1] * std::sin(t70) * 1.173708920187793) -
                              a[0] * t69 * 2.347417840375587) -
                             a[2] * std::cos(t70) * 1.173708920187793) -
                            a[2] * std::cos(t78) * 1.173708920187793) -
                           a[1] * std::sin(t78) * 1.173708920187793) -
                          a[2] * std::cos(t93) * 1.173708920187793) -
                         a[1] * std::sin(t93) * 1.173708920187793) +
                        t6 * t139 * t144) +
                       t26 * t139 * t144 * 1.395329189534704) +
                      t42 * t139 * t144 * 0.5) +
                     std::cos(t13 + t14) * t139 * t144 * 0.25) +
                    t56 * t139 * t144 * 0.25) +
                   std::cos(t13 + t40) * t139 * t144 * 0.5) +
                  std::cos(t13 * 3.0) * t139 * t144 * 0.25) +
                 t6 * t310) +
                t26 * t310) -
               t37 * t69 * t136 * t138 * t294 * 8.4026682818002442E-6) +
              t6 * t64 * t106 * t30 * 7.2874039771389057E-10) +
             t26 * t64 * t106 * t30 * 7.2874039771389057E-10) +
            t42 * t64 * t106 * t30 * 2.4291346590463017E-10) +
           t56 * t64 * t106 * t30 * 2.4291346590463017E-10) +
          t10 * t63 * t136 * t138 * t346 * 8.4026682818002442E-6 / a_tmp) +
         t45 * t63 * t136 * t138 * t346 * -8.4026682818002442E-6 / a_tmp) +
        t63 * t69 * t136 * t138 * t346 * -8.4026682818002442E-6 / a_tmp) +
       t6 * t86) +
      t26 * t86;
  ct_idx_34_tmp = t37 * t269 * t294;
  ct_idx_43 = t84_tmp * 9.384E-5 - t104 * 0.92;
  ct_idx_53_tmp =
      t302_tmp *
      (((t20 * 0.116695 + t21 * 0.116695) + t59 * 0.0061970000000000081) -
       t87 * 0.0061970000000000081);
  ct_idx_53 = ct_idx_53_tmp * 2.9945998368930331E-6;
  ct_idx_54 = t224_tmp * 0.058094319999999991 +
              t348_tmp * -6.7769622429411819E-8 / a_tmp;
  ct_idx_57 = t231_tmp * 0.058094319999999991 +
              t348_tmp * -6.7832484736273673E-7 / a_tmp;
  ct_idx_66 = (t231_tmp * 0.000572001265 + t224_tmp * 5.7496807E-5) +
              t348_tmp * 9.887085291719015E-8 / a_tmp;
  ct_idx_67_tmp = -t9 * t136 * t138;
  ct_idx_67 = (t323 + ct_idx_67_tmp * t317) + t344;
  ct_idx_68 = ((t84_tmp * 1.3857924E-5 + t323 * 0.135862) -
               t231_tmp * t317 * 0.135862) -
              t104 * 0.135862;
  ct_idx_74 = t6 * t438;
  ct_idx_75 = t9 * t438;
  t84 = t9 * t147 * b_t438_tmp;
  t104 = t84 + t224_tmp * t349;
  ct_idx_83_tmp = t10 * t104;
  t30 = t6 * t147 * b_t438_tmp;
  t100 = t368 + t30;
  ct_idx_95 = t316 * t100 * 0.135862;
  ct_idx_96 = t317 * t104 * -0.135862;
  t323 = t63 * t283;
  t87 = ((((t20 * 0.002261558852 + t21 * 0.002261558852) - t302) +
          t323 * t346 * -2.9945998368930331E-6 / a_tmp) +
         t394 * 0.135862) +
        t397 * 0.135862;
  t20 = t63 * t284;
  ct_idx_99_tmp = ((((t247 - t250) + t305) + t402) - t405) +
                  t20 * t346 * 2.9945998368930331E-6 / a_tmp;
  ct_idx_99 = t270 * ct_idx_99_tmp;
  ct_idx_101 = ((((t240 - t244) + t348_tmp * 1.3659106438316931E-7 / a_tmp) +
                 t284 * t348) +
                t398) -
               t393;
  ct_idx_105 = t469 * ct_idx_99_tmp;
  t56 =
      t37 * (((((((((((((((((((((((((-(t73_tmp * 1.789768344023452) -
                                     t74_tmp * 1.789768344023452) -
                                    a[0] * t9 * 4.694835680751174) -
                                   a[0] * t29 * 4.694835680751174) +
                                  a[1] * std::sin(t11) * 2.347417840375587) -
                                 a[2] * std::cos(t11) * 2.347417840375587) +
                                a[1] * t35 * 2.347417840375587) -
                               a[2] * t34 * 2.347417840375587) +
                              a[1] * std::sin(t48) * 2.347417840375587) -
                             a[2] * std::cos(t48) * 2.347417840375587) -
                            a[1] * t72 * 2.347417840375587) -
                           a[2] * t71 * 2.347417840375587) +
                          t88 * 1.145329189534704) +
                         t7 * t139 * t144) +
                        std::cos(t14) * t139 * t144 * 0.5) +
                       std::cos(t40) * t139 * t144) +
                      std::cos(t51) * t139 * t144 * 0.5) +
                     t310) +
                    t7 * t310) -
                   t85 * 1.6805336563600488E-5) +
                  t123) +
                 t7 * t123) +
                t438_tmp * -1.6805336563600488E-5 / a_tmp) +
               t432 * -1.6805336563600488E-5 / a_tmp) +
              t86) +
             t7 * t86);
  t69 = t269 * ct_idx_68;
  t432 = t270 * ct_idx_68;
  t139 = t269 * t87;
  t144 = t407 * t87;
  t84_tmp =
      ((((-t240 + t244) + t302_tmp * 1.3659106438316931E-7) + t393) - t398) +
      t284 * t349;
  t42 = -t87 * t84_tmp;
  t45 = t63 * t500;
  t30 = ((t438_tmp * 1.3918314267451341E-6 / a_tmp + ct_idx_74) +
         t30 * -0.07189799999999999) +
        t45 * -0.0033419999999999839 / a_tmp;
  t46 = t10 * t30;
  t49 = t63 * (t224 + t231) * t346;
  t26 = (((((((t8 * 1.33280622 - ct_idx_53) +
              t49 * -2.9945998368930331E-6 / a_tmp) +
             c_t438_tmp * 1.3857924E-5) +
            t147 * t322 * b_t438_tmp * -0.135862) +
           ct_idx_95) +
          ct_idx_96) +
         t139) +
        ct_idx_99;
  t59 = t7 * t100;
  t12 = ((((((((((ct_idx_34_tmp * 1.568871696532875E-10 -
                  t329_tmp * 5.4635204655161008E-10) -
                 t270 * t422) +
                t407 * t421) +
               t7 * t104 * -2.4787446E-5) +
              t10 * t100 * -2.4787446E-5) +
             t59 * -7.117814E-6) +
            ct_idx_83_tmp * 7.117814E-6) -
           ct_idx_68 * t469) +
          ct_idx_67 * t87) +
         t56 * 2.077264E-6) +
        t45 * 2.077264E-6 / a_tmp;
  t13 = t6 * t63 * t136 * t138 * t346;
  t70 = t7 * t30;
  t106 =
      t302_tmp *
      ((((t469_tmp + t348_tmp * 2.5721307500716351E-6 / a_tmp) + t394) + t395) +
       t397);
  t93 = t20 * t500;
  t123 =
      (((((((t432 + t59 * -0.002261558852) + ct_idx_83_tmp * 0.002261558852) +
           t106 * 2.9945998368930331E-6) -
          t144) +
         t56 * 0.00084193681400000124) +
        t93 * 0.135862 / a_tmp) +
       t70 * 0.135862) +
      t10 *
          (((-t9 * t438 + t84 * 0.07189799999999999) + t45 * 0.033451 / a_tmp) +
           t13 * 1.3918314267451341E-6 / a_tmp) *
          0.135862;
  t294 = t7 * (t147 * t9 *
                   (((((t73 + t74) - t163) + t311) +
                     t63 * t9 * t136 * t138 * t346 * 0.046948356807511735 /
                         (t9 - t29)) +
                    t29 * t63 * t136 * t138 * t346 * 0.046948356807511735 /
                        (t9 - t29)) +
               t136 * t6 * t138 * t349);
  t64 = t10 * (t368 + t147 * t6 *
                          (((((t73 + t74) - t163) + t311) +
                            t63 * t9 * t136 * t138 * t346 *
                                0.046948356807511735 / (t9 - t29)) +
                           t29 * t63 * t136 * t138 * t346 *
                               0.046948356807511735 / (t9 - t29)));
  t78 =
      t7 * (((-t9 * t438 + t147 * t9 *
                               (((((t73 + t74) - t163) + t311) +
                                 t63 * t9 * t136 * t138 * t346 *
                                     0.046948356807511735 / (t9 - t29)) +
                                t29 * t63 * t136 * t138 * t346 *
                                    0.046948356807511735 / (t9 - t29)) *
                               0.07189799999999999) +
             t500 * t63 * 0.033451 / (t9 - t29)) +
            t6 * t63 * t136 * t138 * t346 * 1.3918314267451341E-6 / (t9 - t29));
  t310 = t323 * t500;
  t104 = ((((((-t69 - t302_tmp * ct_idx_101 * 2.9945998368930331E-6) +
              -t407 * ct_idx_99_tmp) +
             t56 * 0.01585441609) -
            t46 * 0.135862) +
           t78 * 0.135862) +
          t294 * 0.002261558852) +
         (t64 * 0.002261558852 + t310 * 0.135862 / a_tmp);
  t100 = t10 * t123;
  t20 = t7 * t104;
  t21 = t147 * t6 *
        (((((t73 + t74) - t163) + t311) +
          t63 * t9 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29)) +
         t29 * t63 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29));
  t84 = t147 * t9 *
        (((((t73 + t74) - t163) + t311) +
          t63 * t9 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29)) +
         t29 * t63 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29));
  t85 = t7 * t123;
  t86 = t10 * t104;
  t88 = t7 * (t368 + t147 * t6 *
                         (((((t73 + t74) - t163) + t311) +
                           t63 * t9 * t136 * t138 * t346 *
                               0.046948356807511735 / (t9 - t29)) +
                          t29 * t63 * t136 * t138 * t346 *
                              0.046948356807511735 / (t9 - t29)));
  t30 = (((((((((-(ct_idx_34_tmp * 2.3998612687077079E-8) +
                 t329_tmp * 1.568871696532875E-10) -
                t269 * t422) +
               t407 * t423) +
              ct_idx_83_tmp * -0.001088793059) +
             -ct_idx_67 *
                 (((((t247 - t250) + t305) + t402) - t405) +
                  t284 * t63 * t346 * 2.9945998368930331E-6 / (t9 - t29))) +
            t56 * 2.55679E-7) +
           ct_idx_68 * t84_tmp) +
          t294 * 7.117814E-6) +
         (t88 * 0.001088793059 + t64 * 7.117814E-6)) +
        t45 * 2.55679E-7 / a_tmp;
  t59 = t147 *
        (((((t73 + t74) - t163) + t311) +
          t63 * t9 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29)) +
         t29 * t63 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29));
  t84_tmp =
      t147 * t322 *
      (((((t73 + t74) - t163) + t311) +
        t63 * t9 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29)) +
       t29 * t63 * t136 * t138 * t346 * 0.046948356807511735 / (t9 - t29));
  t323 = (t231_tmp * 0.000740309489 - t224_tmp * 0.000218457134) +
         t348_tmp * 1.26077556260883E-8 / a_tmp;
  t87 = (t224_tmp * 0.004431760472 - t231_tmp * 0.000218457134) +
        t348_tmp * 1.2673148405298769E-9 / a_tmp;
  tau[0] =
      (((((((t5 * 0.05074155792 + t8 * 0.00164788305444) + t139 * 0.000102) +
           ct_idx_99 * 0.000102) -
          t6 *
              (((((((ct_idx_74 * 0.92 + t85) + t348 * ct_idx_57) - t86) -
                  t21 * 0.06614616) -
                 t45 * 0.0030746399999999848 / a_tmp) +
                t224_tmp * ct_idx_43) +
               t438_tmp * 1.2804849126055231E-6 / a_tmp) *
              0.063146) +
         (t9 *
              (((((((ct_idx_75 * -0.92 + t100) + t348 * ct_idx_54) + t20) +
                  t84 * 0.06614616) +
                 t45 * 0.03077492 / a_tmp) +
                ct_idx_67_tmp * ct_idx_43) +
               t13 * 1.2804849126055231E-6 / a_tmp) *
              0.063146 -
          t317 *
              (t147 * t9 *
                   (((((t73 + t74) - t163) + t311) +
                     t63 * t9 * t136 * t138 * t346 * 0.046948356807511735 /
                         (t9 - t29)) +
                    t29 * t63 * t136 * t138 * t346 * 0.046948356807511735 /
                        (t9 - t29)) +
               t136 * t6 * t138 * t349) *
              1.3857924E-5)) +
        (((t59 * 0.000379294663816248 +
           t9 * (((((((((-t7 * t12 + t100 * 0.016646) - t344 * ct_idx_57) +
                       ct_idx_43 * t391) -
                      t317 * t26) +
                     t20 * 0.016646) -
                    t10 * t30) +
                   t348 * t87) +
                  (t21 * -0.000218457134 + t84 * 0.000740309489)) +
                 (((t45 * -0.000572001265 / a_tmp + t224_tmp * ct_idx_66) +
                   t13 * 1.6317518327492342E-8 / a_tmp) +
                  t438_tmp * 4.8151190019616922E-9 / a_tmp))) -
          t6 * (((((((((t348 * t323 + t85 * 0.016646) + t10 * t12) +
                      t344 * ct_idx_54) -
                     ct_idx_43 * t390) -
                    t316 * t26) -
                   t86 * 0.016646) -
                  t7 * t30) +
                 (t21 * -0.004431760472 + t84 * 0.000218457134)) +
                (((t45 * 5.7496807E-5 / a_tmp + t231_tmp * ct_idx_66) +
                  t13 * 4.8151190019616922E-9 / a_tmp) +
                 t438_tmp * 9.7682568978818128E-8 / a_tmp))) -
         t322 * (((((((t8 * 10.35800622 - ct_idx_53) + ct_idx_95) + ct_idx_96) +
                    t139) +
                   ct_idx_99) +
                  t59 * 0.000107697924) +
                 (((t84_tmp * -1.055862 + t224_tmp * ct_idx_54) +
                   t231_tmp * ct_idx_57) -
                  t49 * 2.3272763340607019E-5 / a_tmp)))) +
       (((t316 *
              (t368 + t147 * t6 *
                          (((((t73 + t74) - t163) + t311) +
                            t63 * t9 * t136 * t138 * t346 *
                                0.046948356807511735 / (t9 - t29)) +
                           t29 * t63 * t136 * t138 * t346 *
                               0.046948356807511735 / (t9 - t29))) *
              1.3857924E-5 -
          t84_tmp * 0.000107697924) +
         t238 * t6 * ct_idx_54) +
        t238 * t9 * ct_idx_57)) +
      (ct_idx_53_tmp * -3.0544918336308929E-10 -
       t49 * 2.3738218607419161E-9 / a_tmp);
  t30 = ((t269 * t307 + t270 * t309) + t269 * t421) - t270 * t423;
  t59 = t10 * (t147 * t9 *
                   (((((t73 + t74) - t163) + t311) +
                     t63 * t9 * t136 * t138 * t346 * 0.046948356807511735 /
                         (t9 - t29)) +
                    t29 * t63 * t136 * t138 * t346 * 0.046948356807511735 /
                        (t9 - t29)) +
               t136 * t6 * t138 * t349);
  tau[1] =
      (((((((((((((t30 + ct_idx_74 * 0.0030746399999999848) +
                  ct_idx_75 * 0.03077492) +
                 ct_idx_105) +
                t42) +
               t85 * 0.0033419999999999839) -
              t100 * 0.033451) -
             t56 * 0.001100428748) +
            t224 * ct_idx_43) +
           (((((((t231 * ct_idx_43 + t356 * ct_idx_57) + ct_idx_54 * t391) -
                t390 * ct_idx_57) -
               t284 * t123) -
              t20 * 0.033451) -
             t86 * 0.0033419999999999839) -
            t283 * t104)) +
          (t294 * 2.077264E-6 + t59 * 2.55679E-7)) +
         (t88 * -2.55679E-7 + t64 * 2.077264E-6)) +
        (t21 * -0.00016356365971999891 - t84 * 0.00164065393316)) +
       ((t45 * -0.0066258277698 / a_tmp - t224_tmp * t323) +
        t348_tmp * ct_idx_54 * 7.3730961669862691E-7 / a_tmp)) +
      ((t231_tmp * t87 - t13 * 3.022574518547907E-8 / a_tmp) +
       t438_tmp * 3.01206573739776E-9 / a_tmp);
  tau[2] =
      ((((((((((((t30 + t69 * 0.116695) - t432 * 0.0061970000000000081) +
                t144 * 0.0061970000000000081) +
               t407 * ct_idx_99_tmp * 0.116695) +
              ct_idx_105) +
             t42) +
            t78 * -0.01585441609) +
           t10 *
               (((-t9 * t438 + t147 * t9 *
                                   (((((t73 + t74) - t163) + t311) +
                                     t63 * t9 * t136 * t138 * t346 *
                                         0.046948356807511735 / (t9 - t29)) +
                                    t29 * t63 * t136 * t138 * t346 *
                                        0.046948356807511735 / (t9 - t29)) *
                                   0.07189799999999999) +
                 t500 * t63 * 0.033451 / (t9 - t29)) +
                t6 * t63 * t136 * t138 * t346 * 1.3918314267451341E-6 /
                    (t9 - t29)) *
               -0.00084193681400000124) -
          t70 * 0.00084193681400000124) +
         (((t46 * 0.01585441609 - t56 * 0.0029557773160589071) +
           t302 * ct_idx_101) -
          t294 * 0.00026183534623414)) +
        (t59 * -1.375920120584402E-5 + t88 * 1.375920120584402E-5)) +
       ((t64 * -0.00026183534623414 - t45 * 0.001100428748 / a_tmp) -
        t106 * 1.8557535189226148E-8)) +
      (t310 * -0.01585441609 / a_tmp - t93 * 0.00084193681400000124 / a_tmp);
}

void Go1Dynamics::go1_RL_inverse_dynamics_task_space(const Eigen::Vector3d &q, const Eigen::Vector3d &v, const Eigen::Vector3d &a,
                                                     Eigen::Vector3d &tau) {
  double a_tmp;
  double b_t323_tmp;
  double b_t416_tmp;
  double t10;
  double t100;
  double t104;
  double t106;
  double t11;
  double t12;
  double t124;
  double t13;
  double t136;
  double t138;
  double t139;
  double t14;
  double t144;
  double t147;
  double t157;
  double t161;
  double t20;
  double t21;
  double t225;
  double t225_tmp;
  double t230;
  double t230_tmp;
  double t236;
  double t239;
  double t26;
  double t265;
  double t266;
  double t279;
  double t280;
  double t29;
  double t291;
  double t297;
  double t297_tmp;
  double t299;
  double t30;
  double t300;
  double t302;
  double t308;
  double t317_tmp;
  double t323;
  double t323_tmp;
  double t329;
  double t331;
  double t332;
  double t333;
  double t333_tmp;
  double t334;
  double t34;
  double t35;
  double t351;
  double t37;
  double t379;
  double t379_tmp;
  double t381;
  double t385;
  double t388;
  double t389;
  double t391;
  double t40;
  double t403;
  double t416;
  double t416_tmp;
  double t417;
  double t418;
  double t419;
  double t42;
  double t420;
  double t429;
  double t429_tmp;
  double t430;
  double t431;
  double t45;
  double t46;
  double t463;
  double t464;
  double t465_tmp;
  double t470;
  double t48;
  double t49;
  double t492_tmp;
  double t494;
  double t5;
  double t503;
  double t51;
  double t513;
  double t56;
  double t59;
  double t6;
  double t63;
  double t64;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t78;
  double t8;
  double t82;
  double t83;
  double t84;
  double t85;
  double t86;
  double t9;
  double t93;
  // go1_RL_inverse_dynamics_task_space
  //     TAU = go1_RL_inverse_dynamics_task_space(IN1,IN2,IN3)
  //     This function was generated by the Symbolic Math Toolbox version 9.2.
  //     01-Jul-2023 18:28:07
  t5 = std::cos(q[0]);
  t6 = std::cos(q[1]);
  t7 = std::cos(q[2]);
  t8 = std::sin(q[0]);
  t9 = std::sin(q[1]);
  t10 = std::sin(q[2]);
  t11 = q[0] + q[1];
  t12 = q[0] + q[2];
  t13 = q[1] + q[2];
  t14 = q[1] * 2.0;
  t20 = t6 * t6;
  t21 = t7 * t7;
  t26 = std::cos(t13);
  t29 = std::sin(t13);
  t30 = q[2] + t11;
  t37 = 1.0 / t10;
  t40 = q[1] + t13;
  t46 = t11 + t13;
  t48 = q[0] - q[1];
  t49 = q[0] - q[2];
  t51 = t13 * 2.0;
  t59 = t13 - q[0];
  t503 = t5 * v[1];
  t82 = t503 * 81200.0;
  t83 = t5 * v[2] * 213000.0;
  t332 = t8 * v[2];
  t84 = t332 * 81200.0;
  t85 = t9 * v[0] * 213000.0;
  t86 = t8 * v[1] * 213000.0;
  t104 = t6 * t8 * v[1] * -213000.0;
  t124 = t5 * t9 * t10 * v[2] * -213000.0;
  t34 = std::cos(t30);
  t35 = std::sin(t30);
  t42 = std::cos(q[2] + t13);
  t45 = std::sin(t40);
  t56 = std::cos(q[1] - q[2]);
  t63 = 1.0 / (t7 + 1.0);
  t69 = std::sin(t51);
  t70 = t13 + t30;
  t71 = std::cos(t59);
  t72 = std::sin(t59);
  t78 = -q[0] + t40;
  t93 = -q[0] + t51;
  t30 = t6 * t83;
  t100 = t7 * t85;
  a_tmp = t9 - t29;
  t106 = 1.0 / (a_tmp * a_tmp);
  t136 = t503 * 1000.0 + t332 * 1000.0;
  t280 = (t10 * 0.179549 + t7 * 0.00334200000000002) + 0.00619699999999998;
  t64 = t63 * t63;
  t144 = t136 * t136;
  t279 = (t7 * 0.179549 - t10 * 0.00334200000000002) + 0.116695;
  t138 = 1.0 / (t6 * 213.0 + t26 * 213.0);
  t147 = 1.0 / (t6 * 1065.0 + t26 * 1065.0);
  t429 = t9 * t10;
  t513 = t6 * t10;
  t291 = (((((((((t85 - t82) - t84) + t30) + t513 * v[0] * 213000.0) + t100) +
             t104) +
            t7 * t30) +
           t429 * t86) +
          t7 * t104) +
         t124;
  t30 = t5 * t20;
  t332 = t6 * t7;
  t59 = t332 * t8;
  t503 = t5 * t6 * t7;
  t331 = ((((((((((((((((((((((t83 - t86) - std::sin(t14) * v[0] * 106500.0) -
                             std::sin(q[2] * 2.0) * v[0] * 106500.0) +
                            t6 * t100) +
                           t429 * t82) +
                          t429 * t84) +
                         t10 * t20 * v[0] * 213000.0) +
                        t20 * t86) +
                       t21 * t86) +
                      t503 * v[1] * -81200.0) +
                     t59 * v[2] * -81200.0) +
                    t30 * v[2] * -213000.0) +
                   t5 * t21 * v[2] * -213000.0) +
                  t429 * (t6 * t86)) +
                 t7 * (t20 * t83)) +
                t6 * t9 * t21 * v[0] * 426000.0) +
               t7 * t10 * t20 * v[0] * 426000.0) +
              t6 * t124) +
             t7 * t8 * t20 * v[1] * -213000.0) +
            t30 * t21 * v[2] * 426000.0) +
           t59 * t9 * t10 * v[1] * 426000.0) -
          t503 * t9 * t10 * v[2] * 426000.0) -
         t8 * t20 * t21 * v[1] * 426000.0;
  t139 = t138 * t138;
  t157 = t332 * t136 * t138;
  t100 = t513 * t136 * t138;
  t20 = t7 * t9 * t136 * t138;
  t161 = t429 * t136 * t138;
  t225_tmp = t9 * t136 * t138;
  t225 = t225_tmp * 0.033451;
  t230_tmp = t6 * t136 * t138;
  t230 = t230_tmp * 0.0033420000000000121;
  t297_tmp = t37 * t291;
  t297 = t297_tmp * 3.4945482796623249E-7;
  t299 = t297_tmp * 1.8557535189226069E-8;
  t300 = t297_tmp * 5.6355440939848791E-12;
  t302 = t297_tmp * 4.5785977209107538E-11;
  t308 = t7 * t279 + t10 * t280;
  t323_tmp = t136 * t138;
  b_t323_tmp = t6 * ((t9 * 0.0056569999999999884 - t6 * 0.0001019999999999979) +
                     0.033451) -
               t9 * ((t6 * 0.0056569999999999884 + t9 * 0.0001019999999999979) +
                     0.0033420000000000121);
  t323 = t323_tmp * b_t323_tmp;
  t332 = t331 * t331;
  t333_tmp = t63 * t331;
  t333 = t333_tmp * -2.2041482069254338E-5 / a_tmp;
  t334 = t333_tmp / (t9 * 45369.0 - t29 * 45369.0);
  t351 = t333_tmp * 7.3662633075448263E-8 / a_tmp;
  t21 = t37 * t63 * t291 * t331 * 9.71653863618521E-10 / a_tmp;
  t236 = t157 * 0.019462;
  t239 = t161 * 0.019462;
  t265 = t100 + t20;
  t266 = t157 + t10 * -t9 * t136 * t138;
  t82 = t37 * t37 * (t291 * t291) * 4.8582693180926035E-10;
  t30 = t230_tmp * t308;
  t329 = t323_tmp * 0.000102 + t323;
  t83 = t64 * t106 * t332 * 9.71653863618521E-10;
  t381 = t225_tmp * 0.063146 + t333_tmp * 7.3730961669862691E-7 / a_tmp;
  t385 = t230_tmp * 0.063146 + t351;
  t59 = t279 * t334;
  t389 = t280 * t333;
  t403 = t297_tmp / 45369.0 + t334;
  t317_tmp = t37 * t265 * t291;
  t85 = t7 * t381;
  t388 = t10 * t381;
  t391 = t7 * t385;
  t104 = t10 * t385;
  t416_tmp = t10 * t279 - t7 * t280;
  b_t416_tmp = -t9 * t136 * t138;
  t416 = (t30 + b_t416_tmp * t416_tmp) + t329;
  t84 = a[1] * t5;
  t86 = a[2] * t8;
  t124 = t139 * t144;
  t503 = t29 * t37 * t136 * t138 * t291;
  t429_tmp = t9 * t63 * t136 * t138 * t331;
  t513 = t29 * t63 * t136 * t138 * t331;
  t429 = ((((t84 * 5000.0 + t86 * 5000.0) + t124 * 406.0) +
           t503 * 0.046948356807511735) +
          t429_tmp * 0.046948356807511735 / a_tmp) +
         t513 * 0.046948356807511735 / a_tmp;
  t417 =
      ((((t157 * 0.001088793059 - t161 * 0.001088793059) + t100 * 7.117814E-6) +
        t20 * 7.117814E-6) -
       t300) +
      t333_tmp * -5.6355440939848791E-12 / a_tmp;
  t418 = ((((t161 * 2.55679E-7 - t157 * 2.55679E-7) + t100 * 2.077264E-6) +
           t20 * 2.077264E-6) +
          t297_tmp * 2.4255080517534E-8) +
         t333_tmp * 2.4255080517534E-8 / a_tmp;
  t419 = ((((t100 * 2.4787446E-5 + t20 * 2.4787446E-5) + t157 * 7.117814E-6) -
           t161 * 7.117814E-6) +
          t302) +
         t333_tmp * 4.5785977209107538E-11 / a_tmp;
  t420 = ((t323_tmp * 1.3857924E-5 + t30 * 0.135862) +
          t225_tmp * t416_tmp * -0.135862) +
         t323 * 0.135862;
  t430 = t6 * t147 * t429;
  t431 = t9 * t147 * t429;
  t30 = t100 * 0.019462 + t20 * 0.019462;
  t463 = (((t30 + t297_tmp * 2.5721307500716351E-6) + t59) + t85) + t104;
  t470 =
      (((t30 + t333_tmp * -2.5721307500716351E-6 / a_tmp) + t59) + t85) + t104;
  t494 =
      ((((((((((((((((((((((((((((((((((((((a[1] * t8 * 2.347417840375587 -
                                            a[2] * t5 * 2.347417840375587) -
                                           a[0] * t10 * 2.347417840375587) +
                                          a[1] * t34 * 0.8948841720117261) +
                                         a[2] * t35 * 0.8948841720117261) +
                                        a[1] * std::sin(t12) *
                                            1.173708920187793) -
                                       a[2] * std::cos(t12) *
                                           1.173708920187793) +
                                      a[1] * t71 * 0.8948841720117261) +
                                     a[1] * std::sin(t46) *
                                         1.173708920187793) -
                                    a[2] * t72 * 0.8948841720117261) -
                                   a[0] * t45 * 2.347417840375587) +
                                  a[1] * std::sin(t49) * 1.173708920187793) -
                                 a[2] * std::cos(t49) * 1.173708920187793) -
                                a[2] * std::cos(t46) * 1.173708920187793) +
                               a[1] * std::sin(t70) * 1.173708920187793) -
                              a[0] * t69 * 2.347417840375587) -
                             a[2] * std::cos(t70) * 1.173708920187793) -
                            a[2] * std::cos(t78) * 1.173708920187793) -
                           a[1] * std::sin(t78) * 1.173708920187793) -
                          a[2] * std::cos(t93) * 1.173708920187793) -
                         a[1] * std::sin(t93) * 1.173708920187793) +
                        t6 * t139 * t144) +
                       t26 * t139 * t144 * 1.395329189534704) +
                      t42 * t139 * t144 * 0.5) +
                     std::cos(t13 + t14) * t139 * t144 * 0.25) +
                    t56 * t139 * t144 * 0.25) +
                   std::cos(t13 + t40) * t139 * t144 * 0.5) +
                  std::cos(t13 * 3.0) * t139 * t144 * 0.25) +
                 t6 * t82) +
                t26 * t82) +
               t37 * t69 * t136 * t138 * t291 * 8.4026682818002442E-6) +
              t6 * t64 * t106 * t332 * 7.2874039771389057E-10) +
             t26 * t64 * t106 * t332 * 7.2874039771389057E-10) +
            t42 * t64 * t106 * t332 * 2.4291346590463017E-10) +
           t56 * t64 * t106 * t332 * 2.4291346590463017E-10) +
          t10 * t63 * t136 * t138 * t331 * -8.4026682818002442E-6 / a_tmp) +
         t45 * t63 * t136 * t138 * t331 * 8.4026682818002442E-6 / a_tmp) +
        t63 * t69 * t136 * t138 * t331 * 8.4026682818002442E-6 / a_tmp) +
       t6 * t21) +
      t26 * t21;
  t379_tmp =
      t297_tmp *
      (((t100 * 0.116695 + t20 * 0.116695) + t161 * 0.00619699999999998) -
       t157 * 0.00619699999999998);
  t379 = t379_tmp * 2.9945998368930331E-6;
  t59 = t225_tmp * t333 + t430;
  t332 = t230_tmp * t334 + t431;
  t464 = ((((t239 - t236) + t297_tmp * 1.365910643831687E-7) + t388) +
          t280 * t334) -
         t391;
  t465_tmp = t63 * t279;
  t100 = ((((t100 * 0.002644146244 + t20 * 0.002644146244) + t297) +
           t465_tmp * t331 * 2.9945998368930331E-6 / a_tmp) +
          t85 * 0.135862) +
         t104 * 0.135862;
  t492_tmp =
      t37 * (((((((((((((((((((((((((t84 * 1.789768344023452 +
                                     t86 * 1.789768344023452) -
                                    a[0] * t9 * 4.694835680751174) -
                                   a[0] * t29 * 4.694835680751174) +
                                  a[1] * std::sin(t11) * 2.347417840375587) -
                                 a[2] * std::cos(t11) * 2.347417840375587) +
                                a[1] * t35 * 2.347417840375587) -
                               a[2] * t34 * 2.347417840375587) +
                              a[1] * std::sin(t48) * 2.347417840375587) -
                             a[2] * std::cos(t48) * 2.347417840375587) -
                            a[1] * t72 * 2.347417840375587) -
                           a[2] * t71 * 2.347417840375587) +
                          t124 * 1.145329189534704) +
                         t7 * t139 * t144) +
                        std::cos(t14) * t139 * t144 * 0.5) +
                       std::cos(t40) * t139 * t144) +
                      std::cos(t51) * t139 * t144 * 0.5) +
                     t82) +
                    t7 * t82) +
                   t503 * 1.6805336563600488E-5) +
                  t83) +
                 t7 * t83) +
                t429_tmp * 1.6805336563600488E-5 / a_tmp) +
               t513 * 1.6805336563600488E-5 / a_tmp) +
              t21) +
             t7 * t21);
  t34 = t147 * t429;
  t30 = t5 * 9.81 - t34 * 0.008752;
  t35 = t10 * t332;
  t104 = t37 * t266 * t291;
  t72 = t323_tmp * 9.384E-5 + t323 * 0.92;
  t71 = t225_tmp * 0.058094319999999991 +
        t333_tmp * 6.7832484736273673E-7 / a_tmp;
  t11 = t230_tmp * 0.058094319999999991 +
        t333_tmp * 6.7769622429412388E-8 / a_tmp;
  t14 = (t225_tmp * 0.000572001265 + t230_tmp * 5.7496807E-5) +
        t333_tmp * 9.887085291719015E-8 / a_tmp;
  t40 = t265 * t420;
  t48 = t266 * t420;
  t51 = t6 * t30;
  t69 = t9 * t30;
  t144 = t10 * t59;
  t147 = t7 * t59;
  t291 = t7 * t332;
  t45 = t308 * t59;
  t56 = t45 * 0.135862;
  t85 = t63 * t280;
  t30 = ((((t161 * 0.002644146244 - t157 * 0.002644146244) + t299) +
          t85 * t331 * 2.9945998368930331E-6 / a_tmp) +
         t388 * 0.135862) -
        t391 * 0.135862;
  t70 = t265 * t100;
  t12 = t403 * t100;
  t13 = t464 * t100;
  t26 = t266 * t30;
  t46 = t403 * t30;
  t49 = -(t463 * t30);
  t42 = t63 * t494;
  t106 = t6 * t63 * t136 * t138 * t331;
  t503 = ((t106 * 1.3918314267451341E-6 / a_tmp + t69) +
          t431 * 0.07189799999999999) +
         t42 * -0.033451 / a_tmp;
  t59 = ((t429_tmp * -1.3918314267451341E-6 / a_tmp + t51) +
         t430 * 0.07189799999999999) +
        t42 * -0.0033420000000000121 / a_tmp;
  t323 = t332 * t416_tmp;
  t64 = t34 * b_t323_tmp;
  t78 = t63 * (t225 + t230) * t331;
  t93 = (((((((t8 * 1.33280622 - t379) + t78 * -2.9945998368930331E-6 / a_tmp) +
             t34 * 1.3857924E-5) +
            t64 * 0.135862) +
           t56) +
          t323 * -0.135862) -
         t70) +
        t26;
  t429 = ((((((((((-(t317_tmp * 2.3998612687077079E-8) +
                   t104 * 1.568871696532875E-10) -
                  t265 * t418) +
                 t403 * t419) +
                t147 * 0.001088793059) +
               t144 * 7.117814E-6) -
              t35 * 0.001088793059) +
             t291 * 7.117814E-6) +
            t420 * t464) -
           t416 * t30) +
          t492_tmp * 2.55679E-7) +
         t42 * 2.55679E-7 / a_tmp;
  t139 = t7 * t503;
  t323_tmp = t10 * t59;
  t86 = t465_tmp * t494;
  t124 = (((((((t40 + t144 * 0.002644146244) + t291 * 0.002644146244) +
              t297_tmp *
                  (((((t236 - t239) - t388) + t389) + t391) +
                   t333_tmp * 1.365910643831687E-7 / a_tmp) *
                  2.9945998368930331E-6) +
             t46) -
            t492_tmp * 0.01585441609) +
           t86 * -0.135862 / a_tmp) +
          t323_tmp * 0.135862) +
         t139 * 0.135862;
  t84 = t7 * t59;
  t83 = t10 * t503;
  t82 = t85 * t494;
  t513 = (((((((t48 + t147 * 0.002644146244) - t35 * 0.002644146244) -
              t297_tmp * t470 * 2.9945998368930331E-6) +
             t12) +
            t492_tmp * 0.00084193681399999745) +
           t82 * 0.135862 / a_tmp) +
          t84 * 0.135862) -
         t83 * 0.135862;
  t20 = t7 * t124;
  t21 = t10 * t513;
  t30 = ((((((((((t317_tmp * 1.568871696532875E-10 -
                  t104 * 5.4635204655161008E-10) -
                 t266 * t418) +
                t403 * t417) -
               t144 * 2.4787446E-5) -
              t147 * 7.117814E-6) -
             t291 * 2.4787446E-5) +
            t35 * 7.117814E-6) +
           t420 * t463) -
          t416 * t100) +
         t492_tmp * 2.077264E-6) +
        t42 * 2.077264E-6 / a_tmp;
  t59 = t7 * t513;
  t503 = t10 * t124;
  t332 = t230_tmp * t11;
  t85 = t225_tmp * t71;
  t104 = (t225_tmp * 0.000740309489 - t230_tmp * 0.000218457134) +
         t333_tmp * 1.26077556260883E-8 / a_tmp;
  t100 = (t230_tmp * 0.004431760472 - t225_tmp * 0.000218457134) +
         t333_tmp * 1.2673148405298769E-9 / a_tmp;
  tau[0] =
      ((((((((t5 * -0.05074155792 + t8 * 0.00164788305444) - t70 * 0.000102) +
            t26 * 0.000102) -
           t9 * (((((((((t430 * 0.000218457134 - t431 * 0.000740309489) -
                        t20 * 0.019462) +
                       t10 * t429) +
                      t21 * 0.019462) -
                     t329 * t71) +
                    t72 * t381) +
                   t93 * t416_tmp) +
                  (((t7 * t30 + t334 * t100) + t42 * 0.000572001265 / a_tmp) -
                   t230_tmp * t14)) +
                 (t106 * -1.6317518327492342E-8 / a_tmp -
                  t429_tmp * 4.8151190019616922E-9 / a_tmp))) +
          t9 *
              (((((((t431 * 0.06614616 + t69 * 0.92) + t20) - t21) +
                  t333 * t11) -
                 t42 * 0.03077492 / a_tmp) +
                t225_tmp * t72) +
               t106 * 1.2804849126055231E-6 / a_tmp) *
              0.063146) +
         ((((-((((((((((t8 * -10.35800622 + t379) - t56) + t70) - t26) -
                    t34 * 0.000107697924) +
                   t323 * 0.135862) -
                  t64 * 1.055862) +
                 t332) +
                t85) +
               t78 * 2.3272763340607019E-5 / a_tmp) *
                 b_t323_tmp +
             t34 * 0.000379294663816248) +
            t45 * 1.3857924E-5) -
           t323 * 1.3857924E-5) +
          t6 * ((((((t430 * 0.004431760472 - t431 * 0.000218457134) +
                    t334 * t104) +
                   t7 * t429) +
                  t59 * 0.019462) +
                 ((((((t503 * 0.019462 + t329 * t11) - t72 * t385) +
                     t308 * t93) -
                    t10 * t30) -
                   t42 * 5.7496807E-5 / a_tmp) +
                  b_t416_tmp * t14)) +
                (t106 * -4.8151190019616922E-9 / a_tmp -
                 t429_tmp * 9.7682568978818128E-8 / a_tmp)))) +
        t6 *
            (((((((t430 * 0.06614616 + t51 * 0.92) + t59) + t503) +
                t334 * t71) -
               t42 * 0.0030746400000000109 / a_tmp) +
              t230_tmp * t72) -
             t429_tmp * 1.2804849126055231E-6 / a_tmp) *
            0.063146) +
       (((t379_tmp * -3.0544918336308929E-10 + t64 * 0.000107697924) -
         t332 * 0.000102) -
        t85 * 0.000102)) +
      t78 * -2.3738218607419161E-9 / a_tmp;
  t30 = ((t265 * t300 + t266 * t302) + t265 * t417) - t266 * t419;
  tau[1] =
      ((((((((((t30 + t430 * 0.00027855727372000068) +
               t431 * 0.00278465646316) +
              t51 * 0.0030746400000000109) +
             t69 * 0.03077492) +
            t49) +
           t13) -
          t147 * 2.55679E-7) +
         (((t291 * 2.077264E-6 + t144 * 2.077264E-6) + t35 * 2.55679E-7) +
          t59 * 0.0033420000000000121)) +
        (((((((((((t20 * 0.033451 - t21 * 0.033451) +
                  t503 * 0.0033420000000000121) -
                 t492_tmp * 0.001100428748) +
                t225 * t72) +
               t230 * t72) +
              t333_tmp * -7.3730961669862691E-7 / a_tmp * t11) +
             t351 * t71) +
            t381 * t11) -
           t71 * t385) +
          t279 * t124) -
         t280 * t513)) +
       ((t42 * -0.0066258277698 / a_tmp - t230_tmp * t104) + t225_tmp * t100)) +
      (t106 * 5.5441256437655659E-8 / a_tmp -
       t429_tmp * 5.54669541845755E-9 / a_tmp);
  tau[2] =
      (((((((((t30 + t40 * 0.116695) - t48 * 0.00619699999999998) -
             t12 * 0.00619699999999998) +
            t46 * 0.116695) +
           t49) +
          t13) -
         t147 * 1.664145327406795E-5) +
        ((((t291 * 0.00031063590994357987 + t144 * 0.00031063590994357987) +
           t35 * 1.664145327406795E-5) +
          t139 * 0.01585441609) -
         t84 * 0.00084193681399999745)) +
       ((((t83 * 0.00084193681399999745 + t323_tmp * 0.01585441609) -
          t492_tmp * 0.0029557773160589071) +
         t299 * t470) +
        t297 * (((((t236 - t239) - t388) + t389) + t391) +
                t331 * t63 * 1.365910643831687E-7 / (t9 - t29)))) +
      ((t42 * -0.001100428748 / a_tmp - t86 * 0.01585441609 / a_tmp) -
       t82 * 0.00084193681399999745 / a_tmp);
}

void Go1Dynamics::go1_RR_inverse_dynamics_task_space(const Eigen::Vector3d &q, const Eigen::Vector3d &v, const Eigen::Vector3d &a,
                                                     Eigen::Vector3d &tau) {
  double a_tmp;
  double b_t417_tmp;
  double b_t435_tmp;
  double ct_idx_101;
  double ct_idx_105;
  double ct_idx_107_tmp;
  double ct_idx_113;
  double ct_idx_36_tmp;
  double ct_idx_45;
  double ct_idx_55;
  double ct_idx_55_tmp;
  double ct_idx_57;
  double ct_idx_58;
  double ct_idx_67_tmp;
  double ct_idx_69;
  double ct_idx_76;
  double ct_idx_77;
  double ct_idx_79;
  double ct_idx_80;
  double ct_idx_88_tmp;
  double t10;
  double t100;
  double t104;
  double t106;
  double t11;
  double t12;
  double t123;
  double t13;
  double t136;
  double t138;
  double t139;
  double t14;
  double t144;
  double t147;
  double t163;
  double t20;
  double t21;
  double t230;
  double t230_tmp;
  double t235;
  double t235_tmp;
  double t239;
  double t245;
  double t248;
  double t251;
  double t26;
  double t270;
  double t271;
  double t284;
  double t285;
  double t287;
  double t288;
  double t29;
  double t296;
  double t30;
  double t302_tmp;
  double t304;
  double t307;
  double t308;
  double t311;
  double t313;
  double t318;
  double t330_tmp;
  double t335;
  double t335_tmp;
  double t34;
  double t341;
  double t343;
  double t345;
  double t345_tmp;
  double t346;
  double t35;
  double t358;
  double t365;
  double t37;
  double t385;
  double t388;
  double t389;
  double t390;
  double t391;
  double t393;
  double t394;
  double t399;
  double t40;
  double t400;
  double t403;
  double t417;
  double t417_tmp;
  double t418;
  double t419;
  double t42;
  double t420;
  double t421;
  double t435;
  double t435_tmp;
  double t45;
  double t46;
  double t464;
  double t464_tmp;
  double t48;
  double t49;
  double t495;
  double t5;
  double t51;
  double t56;
  double t59;
  double t6;
  double t63;
  double t64;
  double t69;
  double t7;
  double t70;
  double t71;
  double t72;
  double t73;
  double t73_tmp;
  double t74;
  double t74_tmp;
  double t78;
  double t8;
  double t84;
  double t84_tmp;
  double t85;
  double t86;
  double t87;
  double t88;
  double t9;
  double t93;
  // go1_RR_inverse_dynamics_task_space
  //     TAU = go1_RR_inverse_dynamics_task_space(IN1,IN2,IN3)
  //     This function was generated by the Symbolic Math Toolbox version 9.2.
  //     01-Jul-2023 18:28:36
  t5 = std::cos(q[0]);
  t6 = std::cos(q[1]);
  t7 = std::cos(q[2]);
  t8 = std::sin(q[0]);
  t9 = std::sin(q[1]);
  t10 = std::sin(q[2]);
  t11 = q[0] + q[1];
  t12 = q[0] + q[2];
  t13 = q[1] + q[2];
  t14 = q[1] * 2.0;
  t20 = t6 * t6;
  t21 = t7 * t7;
  t26 = std::cos(t13);
  t29 = std::sin(t13);
  t30 = q[2] + t11;
  t37 = 1.0 / t10;
  t40 = q[1] + t13;
  t46 = t11 + t13;
  t48 = q[0] - q[1];
  t49 = q[0] - q[2];
  t51 = t13 * 2.0;
  t59 = t13 - q[0];
  t73_tmp = a[1] * t5;
  t73 = t73_tmp * 5000.0;
  t74_tmp = a[2] * t8;
  t74 = t74_tmp * 5000.0;
  t84_tmp = t5 * v[1];
  t84 = t84_tmp * 81200.0;
  t85 = t5 * v[2] * 213000.0;
  t335 = t8 * v[2];
  t86 = t335 * 81200.0;
  t87 = t9 * v[0] * 213000.0;
  t88 = t8 * v[1] * 213000.0;
  t104 = t6 * t8 * v[1] * -213000.0;
  t139 = t5 * t9 * t10;
  t123 = t139 * v[2] * -213000.0;
  t34 = std::cos(t30);
  t35 = std::sin(t30);
  t42 = std::cos(q[2] + t13);
  t45 = std::sin(t40);
  t56 = std::cos(q[1] - q[2]);
  t63 = 1.0 / (t7 + 1.0);
  t69 = std::sin(t51);
  t70 = t13 + t30;
  t71 = std::cos(t59);
  t72 = std::sin(t59);
  t78 = -q[0] + t40;
  t93 = -q[0] + t51;
  t30 = t6 * t85;
  t100 = t7 * t87;
  a_tmp = t9 - t29;
  t106 = 1.0 / (a_tmp * a_tmp);
  t136 = t84_tmp * 1000.0 + t335 * 1000.0;
  t285 = (t10 * 0.179549 + t7 * 0.00334200000000002) + 0.00619699999999998;
  t64 = t63 * t63;
  t144 = t136 * t136;
  t284 = (t7 * 0.179549 - t10 * 0.00334200000000002) + 0.116695;
  t288 = t7 * t285;
  t138 = 1.0 / (t6 * 213.0 + t26 * 213.0);
  t147 = 1.0 / (t6 * 1065.0 + t26 * 1065.0);
  t287 = t10 * t284;
  t335 = t9 * t10;
  t84_tmp = t6 * t10;
  t296 =
      (((((((((t84 + t86) + t87) + t30) + t84_tmp * v[0] * 213000.0) + t100) +
          t104) +
         t7 * t30) +
        t335 * t88) +
       t7 * t104) +
      t123;
  t59 = t6 * t7;
  t30 = t5 * t20;
  t343 = ((((((((((((((((((((((t85 - t88) - std::sin(t14) * v[0] * 106500.0) -
                             std::sin(q[2] * 2.0) * v[0] * 106500.0) +
                            t59 * t84) +
                           t59 * t86) +
                          t6 * t100) +
                         t10 * t20 * v[0] * 213000.0) +
                        t20 * t88) +
                       t21 * t88) +
                      t139 * v[1] * -81200.0) +
                     t8 * t9 * t10 * v[2] * -81200.0) +
                    t30 * v[2] * -213000.0) +
                   t5 * t21 * v[2] * -213000.0) +
                  t335 * (t6 * t88)) +
                 t7 * (t20 * t85)) +
                t6 * t9 * t21 * v[0] * 426000.0) +
               t7 * t10 * t20 * v[0] * 426000.0) +
              t6 * t123) +
             t7 * t8 * t20 * v[1] * -213000.0) +
            t30 * t21 * v[2] * 426000.0) +
           t59 * t8 * t9 * t10 * v[1] * 426000.0) -
          t5 * t6 * t7 * t9 * t10 * v[2] * 426000.0) -
         t8 * t20 * t21 * v[1] * 426000.0;
  t139 = t138 * t138;
  t104 = t59 * t136 * t138;
  t100 = t84_tmp * t136 * t138;
  t20 = t7 * t9 * t136 * t138;
  t87 = t335 * t136 * t138;
  t230_tmp = t9 * t136 * t138;
  t230 = t230_tmp * 0.033451;
  t235_tmp = t6 * t136 * t138;
  t235 = t235_tmp * 0.0033420000000000121;
  t84_tmp = t136 * t138;
  t239 = t84_tmp * 0.000102;
  t302_tmp = t37 * t296;
  t304 = t302_tmp * 3.4945482796623249E-7;
  t307 = t302_tmp * 1.8557535189226069E-8;
  t308 = t302_tmp * 5.6355440939848791E-12;
  t311 = t302_tmp * 4.5785977209107538E-11;
  t21 = t29 * t37 * t136 * t138 * t296;
  t313 = t21 * 0.046948356807511735;
  t318 = t7 * t284 + t10 * t285;
  t335_tmp = t6 * ((t9 * 0.0056569999999999884 - t6 * 0.0001019999999999979) +
                   0.033451) -
             t9 * ((t6 * 0.0056569999999999884 + t9 * 0.0001019999999999979) +
                   0.0033420000000000121);
  t335 = t84_tmp * t335_tmp;
  t59 = t343 * t343;
  t345_tmp = t63 * t343;
  t345 = t345_tmp * -2.2041482069254338E-5 / a_tmp;
  t346 = t345_tmp / (t9 * 45369.0 - t29 * 45369.0);
  t358 = t345_tmp * -7.3662633075448263E-8 / a_tmp;
  t84 = t37 * t63 * t296 * t343 * 9.71653863618521E-10 / a_tmp;
  t85 = t139 * t144;
  t163 = t85 * 406.0;
  t123 = t87 * 0.016646;
  t245 = t104 * 0.016646;
  t248 = t104 * 0.002261558852;
  t251 = t87 * 0.002261558852;
  t270 = t100 + t20;
  t271 = t104 + t10 * -t9 * t136 * t138;
  t86 = t37 * t37 * (t296 * t296) * 4.8582693180926035E-10;
  t30 = t235_tmp * t318;
  t341 = t239 + t335;
  t365 = t230_tmp * t345;
  t88 = t64 * t106 * t59 * 9.71653863618521E-10;
  t385 = t230_tmp * 0.063146 + t345_tmp * -7.3730961669862691E-7 / a_tmp;
  t388 = t235_tmp * 0.063146 + t358;
  t389 = t284 * t345;
  t403 = t302_tmp / 45369.0 + t346;
  t330_tmp = t37 * t271 * t296;
  t390 = t7 * t385;
  t391 = t10 * t385;
  t393 = t7 * t388;
  t394 = t10 * t388;
  t417_tmp = t287 - t288;
  b_t417_tmp = -t9 * t136 * t138;
  t417 = (t30 + b_t417_tmp * t417_tmp) + t341;
  t399 = t391 * 0.135862;
  t400 = t393 * 0.135862;
  t418 =
      ((((t104 * 0.001088793059 - t87 * 0.001088793059) + t100 * 7.117814E-6) +
        t20 * 7.117814E-6) -
       t308) +
      t345_tmp * -5.6355440939848791E-12 / a_tmp;
  t419 = ((((t87 * 2.55679E-7 - t104 * 2.55679E-7) + t100 * 2.077264E-6) +
           t20 * 2.077264E-6) +
          t302_tmp * 2.4255080517534E-8) +
         t345_tmp * 2.4255080517534E-8 / a_tmp;
  t420 = ((((t100 * 2.4787446E-5 + t20 * 2.4787446E-5) + t104 * 7.117814E-6) -
           t87 * 7.117814E-6) +
          t311) +
         t345_tmp * 4.5785977209107538E-11 / a_tmp;
  t421 = ((t84_tmp * 1.3857924E-5 + t30 * 0.135862) +
          t230_tmp * t417_tmp * -0.135862) +
         t335 * 0.135862;
  t435_tmp = t9 * t63 * t136 * t138 * t343;
  t30 = t29 * t63 * t136 * t138 * t343;
  b_t435_tmp = ((((t73 + t74) - t163) + t313) +
                t435_tmp * 0.046948356807511735 / a_tmp) +
               t30 * 0.046948356807511735 / a_tmp;
  t435 = t5 * 9.81 + t147 * b_t435_tmp * 0.008752;
  t464_tmp = t100 * 0.016646 + t20 * 0.016646;
  t464 = (((t464_tmp - t302_tmp * 2.5721307500716351E-6) + t389) + t390) + t394;
  t495 =
      ((((((((((((((((((((((((((((((((((((((a[1] * t8 * 2.347417840375587 -
                                            a[2] * t5 * 2.347417840375587) -
                                           a[0] * t10 * 2.347417840375587) +
                                          a[1] * std::sin(t12) *
                                              1.173708920187793) -
                                         a[1] * t34 * 0.8948841720117261) -
                                        a[2] * t35 * 0.8948841720117261) -
                                       a[2] * std::cos(t12) *
                                           1.173708920187793) +
                                      a[2] * t72 * 0.8948841720117261) +
                                     a[1] * std::sin(t46) *
                                         1.173708920187793) -
                                    a[1] * t71 * 0.8948841720117261) -
                                   a[0] * t45 * 2.347417840375587) +
                                  a[1] * std::sin(t49) * 1.173708920187793) -
                                 a[2] * std::cos(t49) * 1.173708920187793) -
                                a[2] * std::cos(t46) * 1.173708920187793) +
                               a[1] * std::sin(t70) * 1.173708920187793) -
                              a[0] * t69 * 2.347417840375587) -
                             a[2] * std::cos(t70) * 1.173708920187793) -
                            a[2] * std::cos(t78) * 1.173708920187793) -
                           a[1] * std::sin(t78) * 1.173708920187793) -
                          a[2] * std::cos(t93) * 1.173708920187793) -
                         a[1] * std::sin(t93) * 1.173708920187793) +
                        t6 * t139 * t144) +
                       t26 * t139 * t144 * 1.395329189534704) +
                      t42 * t139 * t144 * 0.5) +
                     std::cos(t13 + t14) * t139 * t144 * 0.25) +
                    t56 * t139 * t144 * 0.25) +
                   std::cos(t13 + t40) * t139 * t144 * 0.5) +
                  std::cos(t13 * 3.0) * t139 * t144 * 0.25) +
                 t6 * t86) +
                t26 * t86) -
               t37 * t69 * t136 * t138 * t296 * 8.4026682818002442E-6) +
              t6 * t64 * t106 * t59 * 7.2874039771389057E-10) +
             t26 * t64 * t106 * t59 * 7.2874039771389057E-10) +
            t42 * t64 * t106 * t59 * 2.4291346590463017E-10) +
           t56 * t64 * t106 * t59 * 2.4291346590463017E-10) +
          t10 * t63 * t136 * t138 * t343 * 8.4026682818002442E-6 / a_tmp) +
         t45 * t63 * t136 * t138 * t343 * -8.4026682818002442E-6 / a_tmp) +
        t63 * t69 * t136 * t138 * t343 * -8.4026682818002442E-6 / a_tmp) +
       t6 * t84) +
      t26 * t84;
  ct_idx_36_tmp = t37 * t270 * t296;
  ct_idx_45 = t84_tmp * 9.384E-5 + t335 * 0.92;
  ct_idx_55_tmp =
      t302_tmp *
      (((t100 * 0.116695 + t20 * 0.116695) + t87 * 0.00619699999999998) -
       t104 * 0.00619699999999998);
  ct_idx_55 = ct_idx_55_tmp * 2.9945998368930331E-6;
  ct_idx_57 = t230_tmp * 0.058094319999999991 +
              t345_tmp * -6.7832484736273673E-7 / a_tmp;
  ct_idx_58 = t235_tmp * 0.058094319999999991 +
              t345_tmp * -6.7769622429412388E-8 / a_tmp;
  ct_idx_67_tmp = t63 * (t230 + t235) * t343;
  ct_idx_69 = (t230_tmp * 0.000572001265 + t235_tmp * 5.7496807E-5) +
              t345_tmp * 9.887085291719015E-8 / a_tmp;
  ct_idx_76 = t270 * t421;
  ct_idx_77 = t271 * t421;
  ct_idx_79 = t6 * t435;
  ct_idx_80 = t9 * t435;
  t104 = t9 * t147 * b_t435_tmp + t235_tmp * t346;
  ct_idx_88_tmp = t10 * t104;
  ct_idx_101 = t417_tmp * t104 * 0.135862;
  t335 = t63 * t284;
  t87 = ((((t100 * 0.002261558852 + t20 * 0.002261558852) - t304) +
          t335 * t343 * -2.9945998368930331E-6 / a_tmp) +
         t390 * 0.135862) +
        t394 * 0.135862;
  ct_idx_105 =
      ((((t123 - t245) + t345_tmp * 1.365910643831687E-7 / a_tmp) + t391) +
       t285 * t345) -
      t393;
  t100 = t63 * t285;
  ct_idx_107_tmp = ((((t248 - t251) + t307) - t399) + t400) +
                   t100 * t343 * 2.9945998368930331E-6 / a_tmp;
  ct_idx_113 = t464 * ct_idx_107_tmp;
  t144 =
      t37 * (((((((((((((((((((((((((-(t73_tmp * 1.789768344023452) -
                                     t74_tmp * 1.789768344023452) -
                                    a[0] * t9 * 4.694835680751174) -
                                   a[0] * t29 * 4.694835680751174) +
                                  a[1] * std::sin(t11) * 2.347417840375587) -
                                 a[2] * std::cos(t11) * 2.347417840375587) +
                                a[1] * t35 * 2.347417840375587) -
                               a[2] * t34 * 2.347417840375587) +
                              a[1] * std::sin(t48) * 2.347417840375587) -
                             a[2] * std::cos(t48) * 2.347417840375587) -
                            a[1] * t72 * 2.347417840375587) -
                           a[2] * t71 * 2.347417840375587) +
                          t85 * 1.145329189534704) +
                         t7 * t139 * t144) +
                        std::cos(t14) * t139 * t144 * 0.5) +
                       std::cos(t40) * t139 * t144) +
                      std::cos(t51) * t139 * t144 * 0.5) +
                     t86) +
                    t7 * t86) -
                   t21 * 1.6805336563600488E-5) +
                  t88) +
                 t7 * t88) +
                t435_tmp * -1.6805336563600488E-5 / a_tmp) +
               t30 * -1.6805336563600488E-5 / a_tmp) +
              t84) +
             t7 * t84);
  t72 = t270 * t87;
  t71 = t403 * t87;
  t56 = ((((-t123 + t245) + t302_tmp * 1.365910643831687E-7) - t391) + t393) +
        t285 * t346;
  t391 = -t87 * t56;
  t30 = t6 * t147 * b_t435_tmp;
  t69 = t63 * t495;
  t59 = ((t435_tmp * 1.3918314267451341E-6 / a_tmp + ct_idx_79) +
         t30 * -0.07189799999999999) +
        t69 * -0.0033420000000000121 / a_tmp;
  t245 = t10 * t59;
  t30 += t365;
  t84_tmp = t7 * t30;
  t49 = ((((((((((ct_idx_36_tmp * 1.568871696532875E-10 -
                  t330_tmp * 5.4635204655161008E-10) -
                 t271 * t419) +
                t403 * t418) +
               t7 * t104 * -2.4787446E-5) +
              t10 * t30 * -2.4787446E-5) +
             t84_tmp * -7.117814E-6) +
            ct_idx_88_tmp * 7.117814E-6) -
           t421 * t464) +
          t417 * t87) +
         t144 * 2.077264E-6) +
        t69 * 2.077264E-6 / a_tmp;
  t42 = t147 * t9 *
        (((((t73 + t74) - t163) + t313) +
          t63 * t9 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29)) +
         t29 * t63 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29));
  t45 = t6 * t63 * t136 * t138 * t343;
  t30 = ((-t9 * t435 + t42 * 0.07189799999999999) + t69 * 0.033451 / a_tmp) +
        t45 * 1.3918314267451341E-6 / a_tmp;
  t46 = t10 * t30;
  t26 = t7 * t59;
  t13 =
      t302_tmp *
      ((((t464_tmp + t345_tmp * 2.5721307500716351E-6 / a_tmp) + t389) + t390) +
       t394);
  t12 = t100 * t495;
  t78 = (((((((ct_idx_77 + t84_tmp * -0.002261558852) +
              ct_idx_88_tmp * 0.002261558852) +
             t13 * 2.9945998368930331E-6) -
            t71) +
           t144 * 0.00084193681399999745) +
          t12 * 0.135862 / a_tmp) +
         t46 * 0.135862) +
        t26 * 0.135862;
  t93 = t7 * t78;
  t106 = t7 * (t147 * t9 *
                   (((((t73 + t74) - t163) + t313) +
                     t63 * t9 * t136 * t138 * t343 * 0.046948356807511735 /
                         (t9 - t29)) +
                    t29 * t63 * t136 * t138 * t343 * 0.046948356807511735 /
                        (t9 - t29)) +
               t136 * t6 * t138 * t346);
  t70 = t10 * (t365 + t147 * t6 *
                          (((((t73 + t74) - t163) + t313) +
                            t63 * t9 * t136 * t138 * t343 *
                                0.046948356807511735 / (t9 - t29)) +
                           t29 * t63 * t136 * t138 * t343 *
                               0.046948356807511735 / (t9 - t29)));
  t64 = t7 * t30;
  t296 = t335 * t495;
  t139 = ((((((-ct_idx_76 - t302_tmp * ct_idx_105 * 2.9945998368930331E-6) +
              -t403 * ct_idx_107_tmp) +
             t144 * 0.01585441609) -
            t245 * 0.135862) +
           t64 * 0.135862) +
          t106 * 0.002261558852) +
         (t70 * 0.002261558852 + t296 * 0.135862 / a_tmp);
  t123 = t10 * t139;
  t87 = t271 * (((((t248 - t251) + t307) - t399) + t400) +
                t285 * t63 * t343 * 2.9945998368930331E-6 / (t9 - t29));
  t104 = t147 * t6 *
         (((((t73 + t74) - t163) + t313) +
           t63 * t9 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29)) +
          t29 * t63 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29));
  t100 = t147 *
         (((((t73 + t74) - t163) + t313) +
           t63 * t9 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29)) +
          t29 * t63 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29));
  t20 = t318 * (t365 + t147 * t6 *
                           (((((t73 + t74) - t163) + t313) +
                             t63 * t9 * t136 * t138 * t343 *
                                 0.046948356807511735 / (t9 - t29)) +
                            t29 * t63 * t136 * t138 * t343 *
                                0.046948356807511735 / (t9 - t29)));
  t21 = t147 * t335_tmp *
        (((((t73 + t74) - t163) + t313) +
          t63 * t9 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29)) +
         t29 * t63 * t136 * t138 * t343 * 0.046948356807511735 / (t9 - t29));
  t84 = t20 * 0.135862;
  t85 = ((((((t8 * 1.33280622 - ct_idx_55) +
             ct_idx_67_tmp * -2.9945998368930331E-6 / a_tmp) -
            ct_idx_101) +
           t72) +
          t87) +
         t100 * 1.3857924E-5) +
        (t84 + t21 * 0.135862);
  t86 = t10 * t78;
  t88 = t7 * t139;
  t335 = t7 * (t365 + t147 * t6 *
                          (((((t73 + t74) - t163) + t313) +
                            t63 * t9 * t136 * t138 * t343 *
                                0.046948356807511735 / (t9 - t29)) +
                           t29 * t63 * t136 * t138 * t343 *
                               0.046948356807511735 / (t9 - t29)));
  t30 = (((((((((-(ct_idx_36_tmp * 2.3998612687077079E-8) +
                 t330_tmp * 1.568871696532875E-10) -
                t270 * t419) +
               t403 * t420) +
              ct_idx_88_tmp * -0.001088793059) +
             -t417 * ct_idx_107_tmp) +
            t144 * 2.55679E-7) +
           t421 * t56) +
          t106 * 7.117814E-6) +
         (t335 * 0.001088793059 + t70 * 7.117814E-6)) +
        t69 * 2.55679E-7 / a_tmp;
  t59 = (t230_tmp * 0.000740309489 - t235_tmp * 0.000218457134) +
        t345_tmp * 1.26077556260883E-8 / a_tmp;
  t84_tmp = (t235_tmp * 0.004431760472 - t230_tmp * 0.000218457134) +
            t345_tmp * 1.2673148405298769E-9 / a_tmp;
  tau[0] =
      ((((((t5 * 0.05074155792 + t8 * 0.00164788305444) + t72 * 0.000102) +
          (((t87 * 0.000102 -
             t6 *
                 (((((((ct_idx_79 * 0.92 + t93) + t345 * ct_idx_57) - t123) -
                     t104 * 0.06614616) -
                    t69 * 0.0030746400000000109 / a_tmp) +
                   t235_tmp * ct_idx_45) +
                  t435_tmp * 1.2804849126055231E-6 / a_tmp) *
                 0.063146) -
            t6 * (((((((((t345 * t59 + t93 * 0.016646) + t10 * t49) +
                        t341 * ct_idx_58) -
                       ct_idx_45 * t388) -
                      t123 * 0.016646) -
                     t7 * t30) -
                    t318 * t85) +
                   (t104 * -0.004431760472 + t42 * 0.000218457134)) +
                  (((t69 * 5.7496807E-5 / a_tmp + t230_tmp * ct_idx_69) +
                    t45 * 4.8151190019616922E-9 / a_tmp) +
                   t435_tmp * 9.7682568978818128E-8 / a_tmp))) +
           t9 *
               (((((((ct_idx_80 * -0.92 + t86) + t345 * ct_idx_58) + t88) +
                   t42 * 0.06614616) +
                  t69 * 0.03077492 / a_tmp) +
                 b_t417_tmp * ct_idx_45) +
                t45 * 1.2804849126055231E-6 / a_tmp) *
               0.063146)) +
         (-t9 * (((((((((t417_tmp * t85 + t7 * t49) - t86 * 0.016646) +
                       t341 * ct_idx_57) -
                      ct_idx_45 * t385) -
                     t88 * 0.016646) +
                    t10 * t30) +
                   t346 * t84_tmp) +
                  (t104 * 0.000218457134 - t42 * 0.000740309489)) +
                 (((t69 * 0.000572001265 / a_tmp - t235_tmp * ct_idx_69) -
                   t45 * 1.6317518327492342E-8 / a_tmp) -
                  t435_tmp * 4.8151190019616922E-9 / a_tmp)) +
          t100 * 0.000379294663816248)) +
        ((t287 - t288) *
             (t147 * t9 *
                  (((((t73 + t74) - t163) + t313) +
                    t63 * t9 * t136 * t138 * t343 * 0.046948356807511735 /
                        (t9 - t29)) +
                   t29 * t63 * t136 * t138 * t343 * 0.046948356807511735 /
                       (t9 - t29)) +
              t136 * t6 * t138 * t346) *
             -1.3857924E-5 +
         t20 * 1.3857924E-5)) +
       ((((t335_tmp *
               (((((((t8 * 10.35800622 - ct_idx_55) - ct_idx_101) + t72) +
                   t87) +
                  t100 * 0.000107697924) +
                 (((t84 + t21 * 1.055862) + t235_tmp * ct_idx_58) +
                  t230_tmp * ct_idx_57)) +
                ct_idx_67_tmp * -2.3272763340607019E-5 / a_tmp) +
           t21 * 0.000107697924) +
          t239 * t6 * ct_idx_58) +
         t239 * t9 * ct_idx_57) -
        ct_idx_55_tmp * 3.0544918336308929E-10)) +
      ct_idx_67_tmp * -2.3738218607419161E-9 / a_tmp;
  t87 = ((t270 * t308 + t271 * t311) + t270 * t418) - t271 * t420;
  t85 = t10 * (t147 * t9 *
                   (((((t73 + t74) - t163) + t313) +
                     t63 * t9 * t136 * t138 * t343 * 0.046948356807511735 /
                         (t9 - t29)) +
                    t29 * t63 * t136 * t138 * t343 * 0.046948356807511735 /
                        (t9 - t29)) +
               t136 * t6 * t138 * t346);
  tau[1] =
      ((((((((((((t87 + ct_idx_79 * 0.0030746400000000109) +
                 ct_idx_80 * 0.03077492) +
                ct_idx_113) +
               t391) +
              t93 * 0.0033420000000000121) -
             t86 * 0.033451) -
            t144 * 0.001100428748) +
           ((((((((t230 * ct_idx_45 + t235 * ct_idx_45) + t358 * ct_idx_57) +
                 t385 * ct_idx_58) -
                ct_idx_57 * t388) -
               t285 * t78) -
              t88 * 0.033451) -
             t123 * 0.0033420000000000121) -
            t284 * t139)) +
          (t106 * 2.077264E-6 + t85 * 2.55679E-7)) +
         (t335 * -2.55679E-7 + t70 * 2.077264E-6)) +
        (t104 * -0.00016356365972000069 - t42 * 0.00164065393316)) +
       ((t69 * -0.0066258277698 / a_tmp - t235_tmp * t59) +
        t345_tmp * ct_idx_58 * 7.3730961669862691E-7 / a_tmp)) +
      ((t230_tmp * t84_tmp - t45 * 3.022574518547907E-8 / a_tmp) +
       t435_tmp * 3.0120657373977961E-9 / a_tmp);
  tau[2] =
      ((((((((((((t87 + ct_idx_76 * 0.116695) -
                 ct_idx_77 * 0.00619699999999998) +
                t71 * 0.00619699999999998) +
               t403 * ct_idx_107_tmp * 0.116695) +
              ct_idx_113) +
             t391) +
            t64 * -0.01585441609) +
           t46 * -0.00084193681399999745) -
          t26 * 0.00084193681399999745) +
         (((t245 * 0.01585441609 - t144 * 0.0029557773160589071) +
           t304 * ct_idx_105) -
          t106 * 0.00026183534623414)) +
        (t85 * -1.3759201205843959E-5 + t335 * 1.3759201205843959E-5)) +
       ((t70 * -0.00026183534623414 - t69 * 0.001100428748 / a_tmp) -
        t13 * 1.8557535189226069E-8)) +
      (t296 * -0.01585441609 / a_tmp - t12 * 0.00084193681399999745 / a_tmp);
}

}